{"version":3,"sources":["serviceWorker.js","store/core/model/entry.js","store/core/duck.js","store/util.js","store/core/selectors.js","store/core/index.js","store/modal/selectors.jsx","store/modal/duck.js","store/modal/index.jsx","store/entry-list/selectors.js","store/entry-list/duck.js","store/entry-list/sagas.js","store/entry-list/index.js","store/index.js","i18n/en-US.js","i18n/index.js","themes/colors.js","themes/index.js","components/styles.js","components/buttons/icon.jsx","components/header.jsx","components/buttons/go-back.jsx","components/menu/index.jsx","components/menu/item.jsx","screens/App/menu-item-wired.jsx","screens/App/main-header-wired.jsx","screens/home/index.jsx","screens/entry-list/components/index.jsx","utils/format.js","components/money-text.jsx","screens/entry-list/components/entry-card.jsx","screens/entry-list/entry-card-wired.jsx","components/buttons/list-item.jsx","screens/entry-list/index.jsx","hooks/use-debounce.js","components/input/text.jsx","screens/entry-list/components/entry-name-input.jsx","screens/entry-list/components/entry-description-input.jsx","utils/parse.js","components/input/reset.jsx","components/input/money.jsx","screens/entry-list/components/entry-value-input.jsx","components/buttons/primary.jsx","components/buttons/link.jsx","components/modal/confirmation.jsx","screens/entry-list/components/add-entry-modal.jsx","screens/entry-list/add-entry-modal-wired.jsx","screens/App/modals-wired.jsx","screens/App/index.jsx","index.jsx"],"names":["Boolean","window","location","hostname","match","entrySchema","schema","Entity","Entry","id","title","description","value","initialState","Object","freeze","entry","Map","spareIDs","Set","createActions","coreClear","coreConsumeSpareID","coreUpsertEntry","coreDeleteEntry","Types","Creators","createReducer","defaultypes","DEFAULT","identity","CORE_CLEAR","CORE_CONSUME_SPARE_ID","state","remove","CORE_UPSERT_ENTRY","json","normalized","normalizeEntity","console","log","result","added","entities","merge","CORE_DELETE_ENTRY","entryID","add","createSelector","createSelectorCreator","defaultMemoize","getState","core","getNextID","get","reducers","Reducers","creators","selectors","getEntryByEntryID","getOpenedModals","modal","opened","modalClear","modalClose","modalOpen","Selectors","MODAL_CLEAR","MODAL_CLOSE","MODAL_OPEN","getEntryIDs","entryByEntryID","keySeq","toOrderedSet","entryListAddAsync","watchAdd","name","select","put","entryListSagas","takeLeading","ENTRY_LIST_ADD_ASYNC","rootSagas","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","all","createStore","combineReducers","applyMiddleware","run","entry_plural","no","screen","totalValue","yes","app","menu","home","entryList","addingNewEntry","i18n","use","LanguageDetector","init","resources","enUS","translations","enUsTranslations","ptBR","fallbackLng","debug","ns","defaultNS","interpolation","escapeValue","formatSeparator","react","wait","createTheme","background","button","text","border","positive","colors","negative","font","weight","medium","dark","default","primary","secondary","accent","disabled","active","shadow","light","themes","css","body2","theme","body1","head","input","Root","styled","styles","IconButton","onClick","children","defaultProps","React","memo","div","ButtonContainer","Title","span","slotButton","visible","onHide","i18next","t","Text","MenuItemWired","route","history","useHistory","useLocation","goTo","useCallback","push","pathname","MainHeaderWired","useState","menuVisible","setMenuVisible","showMenu","hideMenu","HomeScreen","ItemsContainer","toFixed","replace","moneyValue","format","Math","abs","section","Header","header","EntryCardWired","useSelector","ListItemButton","EntryListScreen","entryIDs","dispatch","useDispatch","handleAdd","map","useDebounce","initialValue","onSubmitChange","delay","useEffect","handler","setTimeout","clearTimeout","TextInput","placeholder","setValue","handleChange","target","type","onChange","Number","width","textAlign","CurrencyText","MoneyInput","displayValue","setDisplayValue","handleBlur","actualValue","parse","isFinite","NaN","handleFocus","inputmode","onBlur","onFocus","step","PrimaryButton","LinkButton","height","Footer","footer","ConfirmationModal","onConfirm","onDeny","TopRow","Form","form","handleConfirm","handleDeny","nameSlot","descriptionSlot","valueSlot","AddEntryModalWired","setName","setDescription","setTotalValue","handleNameChange","handleDescriptionChange","handleValueChange","modalList","ModalsWired","openedModals","Modal","key","has","AppRoot","backgroundColor","App","selectedTheme","exact","path","component","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.53279b51.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { normalize as normalizeEntity, schema } from 'normalizr';\n\n/**\n * @typedef {Object} EntryModel\n * @property {string} id\n * @property {string} title\n * @property {string} description\n * @property {number} value\n */\n\nconst entrySchema = new schema.Entity('entry');\n\n/**\n * @param {string} id\n * @param {string} title\n * @param {string} description\n * @param {number} value\n * @returns {EntryModel}\n * @constructor\n */\nfunction Entry(id, title, description, value) {\n  return {\n    id,\n    title,\n    description,\n    value,\n  };\n}\n\nexport function normalize(json) {\n  return normalizeEntity(json, entrySchema);\n}\n\nexport default Entry;\n","import { Map, Set } from 'immutable';\nimport { createActions, createReducer, Types as defaultypes } from 'reduxsauce';\nimport { identity } from 'lodash-es';\n\nimport { normalize } from './model/entry';\n\n/**\n * @typedef {Object} CoreState\n * @property {Immutable.Map<string, EntryModel>} entry\n * @property {Immutable.Set<string>} spareIDs\n *\n * @type {CoreState}\n */\nexport const initialState = Object.freeze({\n  entry: Map(),\n  spareIDs: Set(['1']),\n});\n\n/**\n * @returns {CoreState}\n */\nconst clear = () => ({ ...initialState });\n\nconst consumeSpareID = (state, { id }) => ({\n  ...state,\n  spareIDs: state.spareIDs.remove(id),\n});\n\n/**\n * @param {CoreState} state\n * @param {{entry: EntryModel}} action\n * @returns {CoreState}\n */\nconst upsertEntry = (state, { entry }) => {\n  const normalized = normalize(entry);\n  console.log({normalized});\n  const id = normalized.result;\n  const added = Map([[id, normalized.entities.entry[id]]]);\n\n  return {\n    ...state,\n    entry: state.entry.merge(added),\n  };\n};\n\n/**\n * @param {CoreState} state\n * @param {{entryID: string}} action\n * @returns {CoreState}\n */\nconst deleteEntry = (state, { entryID }) => ({\n  ...state,\n  entry: state.entry.remove(entryID),\n  spareIDs: state.spareIDs.add(entryID),\n});\n\nexport const { Types, Creators } = createActions({\n  coreClear: [],\n  coreConsumeSpareID: ['id'],\n  coreUpsertEntry: ['entry'],\n  coreDeleteEntry: ['entryID'],\n});\n\nexport default createReducer(initialState, {\n  [defaultypes.DEFAULT]: identity,\n  [Types.CORE_CLEAR]: clear,\n  [Types.CORE_CONSUME_SPARE_ID]: consumeSpareID,\n  [Types.CORE_UPSERT_ENTRY]: upsertEntry,\n  [Types.CORE_DELETE_ENTRY]: deleteEntry,\n});\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const createSelector = createSelectorCreator(defaultMemoize);\n","import {createSelector} from '../util';\n\nconst getState = (state) => state.core;\n\nconst getNextID = createSelector([getState], state => state.spareIDs.get(0));\n\nconst getEntryByEntryID = createSelector([getState], (state) => state.entry);\n\nexport default {\n  getEntryByEntryID,\n  getNextID\n};\n","import Reducers, { Creators } from './duck';\nimport Selectors from './selectors';\n\nexport default {\n  reducers: Reducers,\n  creators: Creators,\n  selectors: Selectors,\n};\n","import { createSelector } from '../util';\n\nconst getState = (state) => state.modal;\n\nconst getOpenedModals = createSelector([getState], (state) => state.opened);\n\nexport default {\n  getOpenedModals,\n};\n","import { createActions, createReducer, Types as defaultypes } from 'reduxsauce';\nimport { identity } from 'lodash-es';\nimport { Set } from 'immutable';\n\n/**\n * @typedef {Object} ModalState\n * @property {Immutable.Set<string>} opened\n */\n\n/**\n * @type {ModalState}\n */\nexport const initialState = Object.freeze({\n  opened: Set(),\n});\n\n/**\n * @returns {ModalState}\n */\nconst clear = () => ({ ...initialState });\n\n/**\n * @param {ModalState} state\n * @param {{modal: string}} action\n * @returns {ModalState}\n */\nconst close = (state, { modal }) => ({ ...state, opened: state.opened.remove(modal) });\n\n/**\n * @param {ModalState} state\n * @param {{modal: string}} action\n * @returns {ModalState}\n */\nconst open = (state, { modal }) => ({\n  ...state,\n  opened: state.opened.add(modal),\n});\n\nexport const { Types, Creators } = createActions({\n  modalClear: [],\n  modalClose: ['modal'],\n  modalOpen: ['modal'],\n});\n\nexport default createReducer(initialState, {\n  [defaultypes.DEFAULT]: identity,\n  [Types.MODAL_CLEAR]: clear,\n  [Types.MODAL_CLOSE]: close,\n  [Types.MODAL_OPEN]: open,\n});\n","import Selectors from './selectors';\nimport Reducers, { Creators } from './duck';\n\nexport default {\n  selectors: Selectors,\n  creators: Creators,\n  reducers: Reducers,\n};\n","import { createSelector } from '../util';\nimport core from '../core';\n\nconst getEntryIDs = createSelector([core.selectors.getEntryByEntryID], (entryByEntryID) =>\n  entryByEntryID.keySeq().toOrderedSet(),\n);\n\nexport default {\n  getEntryIDs,\n};\n","import { createActions } from 'reduxsauce';\n\nexport const { Types, Creators } = createActions({\n  entryListAddAsync: ['name', 'description', 'value'],\n});\n","import {put, takeLeading, select} from 'redux-saga/effects';\n\nimport core from '../core';\n\nimport { Types } from './duck';\nimport Entry from '../core/model/entry';\n\nconst {getNextID} = core.selectors;\n\n/**\n * @param {string} name\n * @param {string} description\n * @param {number} value\n */\nfunction* watchAdd({ name, description, value }) {\n  const id = yield select(getNextID);\n  const entry = Entry(id, name, description, value);\n  console.log({entry});\n  yield put(core.creators.coreUpsertEntry(entry));\n}\n\nexport default [takeLeading([Types.ENTRY_LIST_ADD_ASYNC], watchAdd)];\n","import Selectors from './selectors';\nimport { Creators } from './duck';\nimport Sagas from './sagas';\n\nexport const entryListSagas = Sagas;\n\nexport default {\n  selectors: Selectors,\n  creators: Creators,\n};\n","import { all } from 'redux-saga/effects';\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport core from './core';\nimport modal from './modal';\nimport { entryListSagas } from './entry-list';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nfunction* rootSagas() {\n  yield all([...entryListSagas]);\n}\n\nexport default createStore(\n  combineReducers({ core: core.reducers, modal: modal.reducers }),\n  composeEnhancers(applyMiddleware(sagaMiddleware)),\n);\n\nsagaMiddleware.run(rootSagas);\n","const app = {\n  title: 'Finance',\n  menu: 'Menu',\n};\n\nconst home = {\n  title: 'Home',\n};\n\nconst entryList = {\n  title: '$t(entry_plural)',\n  add: '$t(add) $t(entry)',\n  addingNewEntry: 'Adding new $t(entry)'\n};\n\nexport default {\n  add: 'Add',\n  description: 'Description',\n  entry: 'Entry',\n  entry_plural: 'Entries',\n  no: 'No',\n  screen: 'Screen',\n  title: 'Title',\n  totalValue: 'Total $t(value)',\n  value: 'Value',\n  yes: 'Yes',\n  app,\n  home,\n  entryList,\n};\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport enUsTranslations from './en-US';\n\ni18n.use(LanguageDetector).init({\n  resources: {\n    enUS: {\n      translations: enUsTranslations,\n    },\n    ptBR: {\n      translations: enUsTranslations,\n    },\n  },\n  fallbackLng: 'enUS',\n  debug: true,\n  ns: ['translations'],\n  defaultNS: 'translations',\n  interpolation: {\n    escapeValue: false,\n    formatSeparator: ',',\n  },\n  react: {\n    wait: true,\n  },\n});\n\nexport default i18n;\n","export default {\n  black: '#000000',\n  grey50: '#FAFAFA',\n  grey100: '#F5F5F5',\n  grey200: '#EEEEEE',\n  grey300: '#E0E0E0',\n  grey400: '#BDBDBD',\n  grey700: '#616161',\n  grey800: '#424242',\n  grey850: '#313131',\n  grey900: '#212121',\n  green700: '#388E3C',\n  red700: '#d32f2f',\n  purple700: '#7b1fa2',\n  purple800: '#6a1b9a',\n  purple900: '#4A148C',\n  deepPurple500: '#673ab7',\n  deepPurple600: '#5e35b1',\n  deepPurple700: '#512da8',\n};\n","import colors from './colors';\n\n/**\n * @typedef {Object} Theme\n * @property {{}} background\n * @property {{}} button\n * @property {{}} text\n * @property {{}} border\n */\n\n/**\n * @returns {Theme}\n */\nfunction createTheme(name, background, button, text, border) {\n  return {\n    name,\n    background,\n    button,\n    text: { ...text, positive: colors.green700, negative: colors.red700 },\n    font: {\n      weight: {\n        medium: 500,\n      },\n    },\n    border,\n  };\n}\n\nconst dark = createTheme(\n  'dark',\n  {\n    default: colors.black,\n    primary: colors.grey900,\n    secondary: colors.grey800,\n    accent: colors.grey700,\n    disabled: colors.grey700,\n  },\n  {\n    primary: {\n      background: colors.purple900,\n      active: colors.purple800,\n      text: colors.grey50,\n    },\n    disabled: {\n      text: colors.grey400,\n      background: colors.grey700,\n    },\n  },\n  {\n    primary: colors.grey50,\n    secondary: colors.grey200,\n    disabled: colors.grey400,\n    shadow: colors.purple800,\n  },\n  {\n    primary: colors.grey300,\n    accent: colors.grey100,\n  },\n);\n\nconst light = createTheme(\n  'light',\n  {\n    default: colors.grey50,\n    primary: colors.grey200,\n    secondary: colors.grey100,\n    accent: colors.grey300,\n    disabled: colors.grey400,\n  },\n  {\n    primary: {\n      background: colors.deepPurple500,\n      active: colors.deepPurple700,\n      text: colors.grey50,\n    },\n    disabled: {\n      text: colors.grey700,\n      background: colors.grey400,\n    },\n  },\n  { primary: colors.grey900, secondary: colors.grey800, disabled: colors.grey700, shadow: colors.deepPurple700 },\n  {\n    primary: colors.grey700,\n    accent: colors.grey900,\n  },\n);\n\nconst themes = {\n  dark,\n  light,\n};\n\nexport const themeList = [dark, light];\n\nexport default themes;\n","import { css } from 'styled-components';\n\nexport default {\n  text: css`\n    font-family: 'Roboto';\n  `,\n  body2: ({ theme }) => css`\n    font-size: 0.75rem;\n    color: ${theme.text.secondary};\n\n    &[disabled] {\n      color: ${theme.text.disabled};\n    }\n  `,\n  body1: ({ theme }) => css`\n    font-size: 1rem;\n    color: ${theme.text.primary};\n\n    &[disabled] {\n      color: ${theme.text.disabled};\n    }\n  `,\n  head: ({ theme }) => css`\n    font-size: 1.5rem;\n    color: ${theme.text.primary};\n\n    &[disabled] {\n      color: ${theme.text.disabled};\n    }\n  `,\n  button: css`\n    display: inline-block;\n    border: none;\n    margin: 0;\n    text-decoration: none;\n    cursor: pointer;\n    text-align: center;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    outline: transparent;\n  `,\n  input: ({ theme }) => css`\n    border-color: #616161;\n    border-radius: 0.25rem;\n    border-width: 1px;\n    border-style: solid;\n\n    outline: none;\n\n    transition-property: background;\n    transition-duration: 0.25s;\n    transition-timing-function: ease-in-out;\n\n    padding: 0.25rem 0.5rem;\n\n    background-color: ${theme.background.primary};\n    &:hover,\n    :focus-within {\n      background-color: ${theme.background.secondary};\n    }\n\n    &[disabled] {\n      background-color: ${theme.background.disabled};\n      &:hover,\n      :focus-within {\n        background-color: ${theme.background.disabled};\n      }\n    }\n  `,\n  modal: ({ theme }) => css`\n    z-index: 2;\n    opacity: 95%;\n    position: absolute;\n\n    background: ${theme.background.primary};\n\n    transition-property: left, top, bottom, right;\n    transition-duration: 0.5s;\n    transition-timing-function: ease-in-out;\n  `,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport styles from '../styles';\n\nconst Root = styled.button(\n  styles.text,\n  styles.button,\n  ({ theme }) => css`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    padding: 0.25rem 0.25rem;\n    border-radius: 50%;\n    background: transparent;\n\n    font-size: 1.5em;\n    color: ${theme.text.primary};\n\n    transition: background 0.25s ease-in-out;\n\n    &:hover {\n      background: ${theme.background.accent};\n    }\n    &:active {\n    }\n    &[disabled] {\n      cursor: not-allowed;\n      color: ${theme.button.disabled.text};\n      &:hover {\n        background: transparent;\n        box-shadow: none;\n      }\n      &:active {\n        background: none;\n      }\n    }\n  `,\n);\n\nfunction IconButton({ onClick, children, disabled }) {\n  return (\n    <Root disabled={disabled} onClick={onClick}>\n      {children}\n    </Root>\n  );\n}\n\nIconButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  disabled: PropTypes.bool,\n};\n\nIconButton.defaultProps = {\n  disabled: false,\n};\n\nexport default React.memo(IconButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport styles from './styles';\n\nconst Root = styled.div`\n  position: relative;\n  display: flex;\n  background: ${({ theme }) => theme.background.primary};\n  padding: 1rem;\n  justify-content: center;\n`;\n\nconst ButtonContainer = styled.div(\n  css`\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    padding: 0.5rem;\n  `,\n  styles.head,\n);\n\nconst Title = styled.span(\n  styles.text,\n  styles.head,\n  ({ theme }) => css`\n    color: ${theme.text.primary};\n  `,\n);\n\nfunction Header({ slotButton, children }) {\n  return (\n    <Root>\n      <ButtonContainer>{slotButton}</ButtonContainer>\n      <Title>{children}</Title>\n    </Root>\n  );\n}\n\nHeader.propTypes = {\n  slotButton: PropTypes.node.isRequired,\n  children: PropTypes.string.isRequired,\n};\n\nexport default React.memo(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MdArrowBack } from 'react-icons/md';\n\nimport IconButton from './icon';\n\nfunction GoBackButton({ onClick }) {\n  return (\n    <IconButton onClick={onClick}>\n      <MdArrowBack />\n    </IconButton>\n  );\n}\n\nGoBackButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default React.memo(GoBackButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport i18next from 'i18next';\n\nimport styles from '../styles';\nimport Header from '../header';\nimport GoBackButton from '../buttons/go-back';\n\nconst Root = styled.div(\n  styles.modal,\n  css`\n    width: 90vw;\n    height: 100vh;\n    left: ${({ visible }) => (visible ? 0 : '-100vw')};\n  `,\n);\n\nfunction Menu({ children, visible, onHide }) {\n  return (\n    <Root visible={visible}>\n      <Header slotButton={<GoBackButton onClick={onHide} />}>\n        {i18next.t('app.menu')}\n      </Header>\n      {children}\n    </Root>\n  );\n}\n\nMenu.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element.isRequired).isRequired,\n  visible: PropTypes.bool.isRequired,\n  onHide: PropTypes.func.isRequired,\n};\n\nexport default React.memo(Menu);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport styles from '../styles';\n\nconst Root = styled.div`\n  background: ${({ theme, active }) =>\n    active ? theme.background.default : 'transparent'};\n  padding: 1rem 1rem;\n  cursor: ${({active}) => active ? 'default' : 'pointer'};\n  width: 100%;\n\n  transition: background 0.25s ease-in-out;\n\n  &:hover {\n    background: ${({ theme, active }) =>\n      active ? theme.background.default : theme.background.accent};\n  }\n`;\n\nconst Text = styled.span(styles.text, styles.body1);\n\nfunction MenuItem({ children, active, onClick }) {\n  return (\n    <Root active={active} onClick={onClick}>\n      <Text>{children}</Text>\n    </Root>\n  );\n}\n\nMenuItem.propTypes = {\n  children: PropTypes.string.isRequired,\n  active: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default React.memo(MenuItem);\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation } from 'react-router';\n\nimport MenuItem from '../../components/menu/item';\n\nfunction MenuItemWired({title, route}) {\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const goTo = useCallback(() => history.push(route), [route, history]);\n  return (\n    <MenuItem onClick={goTo} active={location.pathname === route}>\n      {title}\n    </MenuItem>\n  );\n}\n\nMenuItemWired.propTypes = {\n  title: PropTypes.string.isRequired,\n  route: PropTypes.string.isRequired,\n};\n\nexport default MenuItemWired;\n","import React, { useCallback, useState } from 'react';\nimport i18next from 'i18next';\nimport { MdMenu } from 'react-icons/md';\n\nimport IconButton from '../../components/buttons/icon';\nimport Header from '../../components/header';\nimport Menu from '../../components/menu';\n\nimport MenuItemWired from './menu-item-wired';\n\nfunction MainHeaderWired() {\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  const showMenu = useCallback(() => setMenuVisible(true), []);\n  const hideMenu = useCallback(() => setMenuVisible(false), []);\n\n  return (\n    <>\n      <Menu onHide={hideMenu} visible={menuVisible}>\n        <MenuItemWired route=\"/\" title={i18next.t('home.title')} />\n        <MenuItemWired route=\"/entry-list\" title={i18next.t('entryList.title')} />\n      </Menu>\n      <Header\n        slotButton={\n          <IconButton onClick={showMenu}>\n            <MdMenu />\n          </IconButton>\n          }\n      >\n        {i18next.t('app.title')}\n      </Header>\n    </>\n  );\n}\n\nexport default MainHeaderWired;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Root = styled.div`\n  background: ${({ theme }) => theme.background.default};\n`;\n\nfunction HomeScreen() {\n  return <Root />;\n}\n\nexport default HomeScreen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Root = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst ItemsContainer = styled.div`\n  padding: 0.5rem;\n  overflow-y: auto;\n`;\n\nfunction EntryList({ children }) {\n  return (\n    <Root>\n      <ItemsContainer>{children}</ItemsContainer>\n    </Root>\n  );\n}\n\nEntryList.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default React.memo(EntryList);\n","export default {\n  money: value => value\n    .toFixed(2)\n    .replace('.', ',')\n    .replace(/(\\d)(?=(\\d{3})+,)/g, '$1.')\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport format from '../utils/format';\n\nimport styles from './styles';\n\nconst Root = styled.span(\n  styles.text,\n  styles.body1,\n  ({ theme, positive }) => css`\n    font-weight: ${theme.font.weight.medium};\n    color: ${positive ? theme.text.positive : theme.text.negative};\n  `,\n);\n\nfunction MoneyText({ children }) {\n  const moneyValue = format.money(Math.abs(children));\n\n  return <Root positive={children > 0}>{`R$ ${moneyValue}`}</Root>;\n}\n\nMoneyText.propTypes = {\n  children: PropTypes.number.isRequired,\n};\n\nexport default React.memo(MoneyText);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport MoneyText from '../../../components/money-text';\nimport styles from '../../../components/styles';\n\nconst Root = styled.section`\n  background: ${({ theme }) => theme.background.primary};\n  padding: 1rem;\n  border-radius: 0.25rem;\n  width: 100%;\n  margin-top: 0.5rem;\n`;\n\nconst Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nconst Text = styled.span(styles.text, styles.body2);\n\nconst Title = styled.span(\n  styles.text,\n  styles.body1,\n  ({ theme }) => css`\n    font-weight: ${theme.font.weight.medium};\n  `,\n);\n\nfunction EntryCard({ title, value, description }) {\n  return (\n    <Root>\n      <Header>\n        <Title>{title}</Title>\n        <MoneyText>{value}</MoneyText>\n      </Header>\n      <Text>{description}</Text>\n    </Root>\n  );\n}\n\nEntryCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nexport default React.memo(EntryCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport core from '../../store/core';\n\nimport EntryCard from './components/entry-card';\n\nconst { getEntryByEntryID } = core.selectors;\n\nfunction EntryCardWired({ entryID }) {\n  const entry = useSelector(getEntryByEntryID).get(entryID);\n\n  return (\n    <EntryCard value={entry.value} description={entry.description} title={entry.title} />\n  );\n}\n\nEntryCardWired.propTypes = {\n  entryID: PropTypes.string.isRequired,\n};\n\nexport default EntryCardWired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport styles from '../styles';\n\nconst Root = styled.button(\n  styles.text,\n  styles.button,\n  ({ theme }) => css`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n\n    opacity: 50%;\n    transition-property: opacity;\n\n    padding: 0.5rem 1rem;\n    border-radius: 0.25rem;\n    background: ${theme.background.primary};\n\n    font-size: 1.75rem;\n    font-weight: ${theme.font.weight.medium};\n    color: ${theme.button.primary.text};\n\n    &:hover {\n      opacity: 60%;\n    }\n    &:active {\n      opacity: 80%;\n    }\n    &[disabled] {\n      cursor: not-allowed;\n      background: ${theme.background.disabled};\n      color: ${theme.text.disabled};\n      opacity: 30%;\n      &:hover {\n        opacity: 30%;\n      }\n      &:active {\n        opacity: 30%;\n      }\n    }\n  `,\n);\n\nfunction ListItemButton({ onClick, children, disabled }) {\n  return (\n    <Root disabled={disabled} onClick={onClick}>\n      {children}\n    </Root>\n  );\n}\n\nListItemButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  disabled: PropTypes.bool,\n};\n\nListItemButton.defaultProps = {\n  disabled: false,\n};\n\nexport default React.memo(ListItemButton);\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MdAdd } from 'react-icons/md';\n\nimport entryList from '../../store/entry-list';\nimport modal from '../../store/modal';\n\nimport EntryList from './components';\nimport EntryCardWired from './entry-card-wired';\nimport ListItemButton from '../../components/buttons/list-item';\n\nconst { getEntryIDs } = entryList.selectors;\n\nfunction EntryListScreen() {\n  const entryIDs = useSelector(getEntryIDs);\n\n  const dispatch = useDispatch();\n\n  const handleAdd = useCallback(() => {\n    dispatch(modal.creators.modalOpen('AddEntryModalWired'));\n  }, [dispatch]);\n\n  return (\n    <EntryList>\n      {entryIDs.map((entryID) => (\n        <EntryCardWired entryID={entryID} />\n      ))}\n      <ListItemButton onClick={handleAdd}>\n        <MdAdd />\n      </ListItemButton>\n    </EntryList>\n  );\n}\n\nexport default EntryListScreen;\n","import { useEffect } from 'react';\n\n/**\n * @param {string | number} value\n * @param {string | number} initialValue\n * @param {function(string | number):void} onSubmitChange\n * @param {?number} delay\n */\nfunction useDebounce(value, initialValue, onSubmitChange, delay = 500) {\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      onSubmitChange(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay, onSubmitChange]);\n}\n\nexport default useDebounce;\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport useDebounce from '../../hooks/use-debounce';\nimport styles from '../styles';\n\nconst Root = styled.input(\n  styles.text,\n  styles.body1,\n  styles.input,\n  css`\n    width: 100%;\n  `,\n);\n\nfunction TextInput({ placeholder, initialValue, disabled, onSubmitChange }) {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      setValue(target.value);\n    },\n    [setValue],\n  );\n\n  useDebounce(value, initialValue, onSubmitChange);\n\n  return (\n    <Root\n      type=\"text\"\n      disabled={disabled}\n      value={value}\n      onChange={handleChange}\n      placeholder={placeholder}\n    />\n  );\n}\n\nTextInput.propTypes = {\n  disabled: PropTypes.bool,\n  initialValue: PropTypes.string.isRequired,\n  onSubmitChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string.isRequired,\n};\n\nTextInput.defaultProps = {\n  disabled: false,\n};\n\nexport default TextInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\n\nimport TextInput from '../../../components/input/text';\n\nfunction EntryNameInput({ initialValue, onChange }) {\n  return (\n    <TextInput\n      placeholder={i18next.t('title')}\n      onSubmitChange={onChange}\n      initialValue={initialValue}\n    />\n  );\n}\nEntryNameInput.propTypes = {\n  initialValue: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default React.memo(EntryNameInput);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\n\nimport TextInput from '../../../components/input/text';\n\nfunction EntryDescriptionInput({ initialValue, onChange }) {\n  return (\n    <TextInput\n      placeholder={i18next.t('description')}\n      onSubmitChange={onChange}\n      initialValue={initialValue}\n    />\n  );\n}\nEntryDescriptionInput.propTypes = {\n  initialValue: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default React.memo(EntryDescriptionInput);\n","export default {\n  money: (value) => {\n    return Number(value.replace('.', '').replace(',', '.'));\n  },\n};\n","import styled, { css } from 'styled-components';\n\nimport styles from '../styles';\n\nexport default styled.input(\n  styles.text,\n  styles.body1,\n  ({ width, textAlign = 'start' }) => css`\n    border: none;\n    outline: none;\n    background: none;\n\n    width: ${width};\n    text-align: ${textAlign};\n  `,\n);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport format from '../../utils/format';\nimport parse from '../../utils/parse';\nimport useDebounce from '../../hooks/use-debounce';\nimport styles from '../styles';\n\nimport ResetInput from './reset';\n\nconst Root = styled.div(\n  styles.input,\n  css`\n    position: relative;\n    width: 8rem;\n  `,\n);\n\nconst CurrencyText = styled.span(\n  styles.text,\n  styles.body1,\n  css`\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0.5rem;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  `,\n);\n\nfunction MoneyInput({ initialValue, disabled, onSubmitChange }) {\n  const [value, setValue] = useState(initialValue);\n  const [displayValue, setDisplayValue] = useState('');\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      setDisplayValue(target.value);\n    },\n    [setDisplayValue],\n  );\n\n  const handleBlur = useCallback(({ target }) => {\n    const actualValue = parse.money(target.value);\n    if (Number.isFinite(actualValue)) {\n      setValue(actualValue);\n      setDisplayValue(format.money(actualValue));\n    } else {\n      setValue(Number.NaN);\n      setDisplayValue('');\n    }\n  }, []);\n\n  const handleFocus = useCallback(() => {\n    if (value === 0) setDisplayValue('');\n  }, [value, setDisplayValue]);\n\n  useEffect(() => {\n    setDisplayValue(format.money(value));\n  }, [value]);\n\n  useDebounce(value, initialValue, onSubmitChange);\n  return (\n    <Root disabled={disabled}>\n      <CurrencyText disabled={disabled}>R$</CurrencyText>\n      <ResetInput\n        type=\"text\"\n        inputmode=\"numeric\"\n        disabled={disabled}\n        value={displayValue}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        onFocus={handleFocus}\n        width=\"100%\"\n        textAlign=\"right\"\n        step=\"0.01\"\n      />\n    </Root>\n  );\n}\n\nMoneyInput.propTypes = {\n  disabled: PropTypes.bool,\n  initialValue: PropTypes.number.isRequired,\n  onSubmitChange: PropTypes.func.isRequired,\n};\n\nMoneyInput.defaultProps = {\n  disabled: false,\n};\n\nexport default MoneyInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MoneyInput from '../../../components/input/money';\n\nfunction EntryValueInput({ initialValue, onChange }) {\n  return <MoneyInput onSubmitChange={onChange} initialValue={initialValue} />;\n}\nEntryValueInput.propTypes = {\n  initialValue: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default React.memo(EntryValueInput);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport styles from '../styles';\n\nconst Root = styled.button(\n  styles.text,\n  styles.button,\n  ({ theme }) => css`\n    display: flex;\n    align-items: center;\n\n    padding: 0.5rem 1rem;\n    border-radius: 0.25rem;\n    background: ${theme.button.primary.background};\n\n    font-size: 1em;\n    font-weight: ${theme.font.weight.medium};\n    color: ${theme.button.primary.text};\n\n    &:hover {\n      box-shadow: inset 0 0 1.5rem ${theme.button.primary.active};\n    }\n    &:active {\n      background: ${theme.button.primary.active};\n    }\n    &[disabled] {\n      cursor: not-allowed;\n      background: ${theme.button.disabled.background};\n      color: ${theme.button.disabled.text};\n      &:hover {\n        box-shadow: none;\n      }\n      &:active {\n        background: none;\n      }\n    }\n  `,\n);\n\nfunction PrimaryButton({ onClick, children, disabled }) {\n  return (\n    <Root disabled={disabled} onClick={onClick}>\n      {children}\n    </Root>\n  );\n}\n\nPrimaryButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  disabled: PropTypes.bool,\n};\n\nPrimaryButton.defaultProps = {\n  disabled: false,\n};\n\nexport default React.memo(PrimaryButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport styles from '../styles';\n\nconst Root = styled.button(\n  styles.text,\n  styles.button,\n  ({ theme }) => css`\n    padding: 0.5rem 1rem;\n    background: transparent;\n\n    font-size: 1em;\n    font-weight: ${theme.font.weight.medium};\n    color: ${theme.text.primary};\n\n    &:hover {\n      text-decoration: underline;\n    }\n    &[disabled] {\n      cursor: not-allowed;\n      color: ${theme.button.disabled.text};\n      &:hover {\n        text-decoration: none;\n      }\n    }\n  `,\n);\n\nfunction LinkButton({ onClick, children, disabled }) {\n  return (\n    <Root disabled={disabled} onClick={onClick}>\n      {children}\n    </Root>\n  );\n}\n\nLinkButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  disabled: PropTypes.bool,\n};\n\nLinkButton.defaultProps = {\n  disabled: false,\n};\n\nexport default React.memo(LinkButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport i18next from 'i18next';\n\nimport styles from '../styles';\nimport PrimaryButton from '../buttons/primary';\nimport LinkButton from '../buttons/link';\n\nconst Root = styled.div(\n  styles.modal,\n  ({ visible, height }) => css`\n    bottom: ${visible ? 0 : `-${height}`};\n    right: 0;\n    left: 0;\n    display: flex;\n    height: ${height};\n    padding-top: 1rem;\n    align-items: center;\n    flex-direction: column;\n  `,\n);\n\nconst Footer = styled.footer`\n  display: flex;\n  padding: 1rem 0;\n`;\n\nfunction ConfirmationModal({ children, onConfirm, onDeny, visible, height }) {\n  return (\n    <Root visible={visible} height={height}>\n      {children}\n      <Footer>\n        <PrimaryButton onClick={onConfirm}>{i18next.t('yes')}</PrimaryButton>\n        <LinkButton onClick={onDeny}>{i18next.t('no')}</LinkButton>\n      </Footer>\n    </Root>\n  );\n}\n\nConfirmationModal.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  height: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n  onDeny: PropTypes.func.isRequired,\n};\n\nexport default ConfirmationModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport i18next from 'i18next';\n\nimport ConfirmationModal from '../../../components/modal/confirmation';\nimport styles from '../../../components/styles';\n\nconst TopRow = styled.div`\n  display: grid;\n  grid-gap: 0.5rem;\n  grid-template-columns: 65% 35%;\n  padding-bottom: 0.5rem;\n  width: 100%;\n`;\nconst Form = styled.form`\n  width: 100%;\n  height: 100%;\n  padding: 0.5rem;\n`;\nconst Title = styled.header(\n  styles.text,\n  styles.head,\n  css`\n    text-align: center;\n    width: 100%;\n    padding-bottom: 1rem;\n  `,\n);\n\nfunction AddEntryModal({\n  handleConfirm,\n  handleDeny,\n  nameSlot,\n  descriptionSlot,\n  valueSlot,\n  visible,\n}) {\n  return (\n    <ConfirmationModal\n      onConfirm={handleConfirm}\n      onDeny={handleDeny}\n      visible={visible}\n      height=\"13rem\"\n    >\n      <Form>\n        <Title>{i18next.t('entryList.addingNewEntry')}</Title>\n        <TopRow>\n          {nameSlot}\n          {valueSlot}\n        </TopRow>\n        {descriptionSlot}\n      </Form>\n    </ConfirmationModal>\n  );\n}\n\nAddEntryModal.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  nameSlot: PropTypes.node.isRequired,\n  descriptionSlot: PropTypes.node.isRequired,\n  valueSlot: PropTypes.node.isRequired,\n  handleConfirm: PropTypes.func.isRequired,\n  handleDeny: PropTypes.func.isRequired,\n};\n\nexport default React.memo(AddEntryModal);\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport entryList from '../../store/entry-list';\n\nimport EntryNameInput from './components/entry-name-input';\nimport EntryDescriptionInput from './components/entry-description-input';\nimport EntryValueInput from './components/entry-value-input';\nimport modal from '../../store/modal';\nimport AddEntryModal from './components/add-entry-modal';\n\nfunction AddEntryModalWired({ visible }) {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [totalValue, setTotalValue] = useState(0);\n\n  const handleNameChange = useCallback(\n    (value) => {\n      setName(value);\n    },\n    [setName],\n  );\n  const handleDescriptionChange = useCallback(\n    (value) => {\n      setDescription(value);\n    },\n    [setDescription],\n  );\n  const handleValueChange = useCallback(\n    (value) => {\n      setTotalValue(value);\n    },\n    [setTotalValue],\n  );\n\n  const dispatch = useDispatch();\n\n  const handleConfirm = useCallback(() => {\n    dispatch(entryList.creators.entryListAddAsync(name, description, totalValue));\n    dispatch(modal.creators.modalClose('AddEntryModalWired'))\n  }, [dispatch, name, description, totalValue]);\n\n  const handleDeny = useCallback(() => {\n    dispatch(modal.creators.modalClose('AddEntryModalWired'));\n  }, [dispatch]);\n\n  return (\n    <AddEntryModal\n      visible={visible}\n      handleDeny={handleDeny}\n      handleConfirm={handleConfirm}\n      nameSlot={<EntryNameInput onChange={handleNameChange} initialValue={name} />}\n      descriptionSlot={\n        <EntryDescriptionInput\n          onChange={handleDescriptionChange}\n          initialValue={description}\n        />\n      }\n      valueSlot={\n        <EntryValueInput onChange={handleValueChange} initialValue={totalValue} />\n      }\n    />\n  );\n}\n\nAddEntryModalWired.propTypes = {\n  visible: PropTypes.bool.isRequired,\n};\n\nexport default AddEntryModalWired;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Set } from 'immutable';\n\nimport modal from '../../store/modal';\nimport AddEntryModalWired from '../entry-list/add-entry-modal-wired';\n\nconst { getOpenedModals } = modal.selectors;\n\nconst modalList = Set([AddEntryModalWired]);\n\nfunction ModalsWired() {\n  const openedModals = useSelector(getOpenedModals);\n  return modalList.map((Modal) => {\n    const { name } = Modal;\n    const key = `modal-${name}`;\n    return <Modal key={key} visible={openedModals.has(name)} />;\n  });\n}\n\nexport default ModalsWired;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { I18nextProvider } from 'react-i18next';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport i18next from '../../i18n';\nimport themes from '../../themes';\nimport MainHeaderWired from './main-header-wired';\nimport HomeScreen from '../home';\nimport EntryListScreen from '../entry-list';\nimport ModalsWired from './modals-wired';\n\nconst AppRoot = styled.div`\n  position: relative;\n  background-color: ${({ backgroundColor }) => backgroundColor};\n  width: 100vw;\n  height: 100%;\n`;\n\nfunction App() {\n  const [selectedTheme] = useState('dark');\n  const theme = themes[selectedTheme];\n\n  return (\n    <ThemeProvider theme={theme}>\n      <I18nextProvider i18n={i18next}>\n        <AppRoot backgroundColor={theme.background.default}>\n          <Router>\n            <ModalsWired />\n            <MainHeaderWired />\n            <Switch>\n              <Route exact path=\"/\" component={HomeScreen} />\n              <Route exact path=\"/entry-list\" component={EntryListScreen} />\n            </Switch>\n          </Router>\n        </AppRoot>\n      </I18nextProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport '@csstools/normalize.css';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport App from './screens/App';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}