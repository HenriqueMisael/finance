{"version":3,"sources":["serviceWorker.js","store/core/model/entry.js","store/core/duck.js","store/util.js","store/core/selectors.js","store/core/index.js","store/modal/selectors.jsx","store/modal/duck.js","store/modal/index.jsx","store/entry-list/selectors.js","store/entry-list/insertion/duck.js","store/entry-list/insertion/selectors.js","store/entry-list/insertion/sagas.js","store/entry-list/insertion/index.js","store/entry-list/index.js","store/index.js","store/local-storage.js","i18n/en-US.js","i18n/index.js","themes/colors.js","themes/index.js","components/styles.js","components/buttons/icon.jsx","components/header.jsx","components/buttons/go-back.jsx","components/menu/index.jsx","components/menu/item.jsx","screens/App/menu-item-wired.jsx","screens/App/main-header-wired.jsx","screens/home/index.jsx","components/buttons/list-item.jsx","screens/entry-list/components/index.jsx","utils/format.js","components/money-text.jsx","screens/entry-list/components/entry-card.jsx","screens/entry-list/entry-card-wired.jsx","screens/entry-list/index.jsx","components/buttons/primary.jsx","components/buttons/link.jsx","components/modal/confirmation.jsx","screens/entry-list/components/add-entry-modal.jsx","hooks/use-debounce.js","components/input/text.jsx","screens/entry-list/components/entry-description-input.jsx","screens/entry-list/entry-description-input-wired.jsx","screens/entry-list/components/entry-name-input.jsx","screens/entry-list/entry-name-input-wired.jsx","utils/parse.js","components/input/reset.jsx","components/input/money.jsx","screens/entry-list/components/entry-value-input.jsx","screens/entry-list/entry-value-input-wired.jsx","screens/entry-list/add-entry-modal-wired.jsx","screens/App/modals-wired.jsx","screens/App/index.jsx","index.jsx"],"names":["Boolean","window","location","hostname","match","entrySchema","schema","Entity","Entry","id","title","description","value","Strategy","SEQUENTIAL","current","Number","parseInt","toString","initialState","entry","Map","spareIDs","createActions","coreClear","coreRegisterId","coreUpsertEntry","coreDeleteEntry","Types","Creators","createReducer","defaultypes","DEFAULT","identity","CORE_CLEAR","CORE_REGISTER_ID","state","generatorStrategy","get","filterNot","_","spareID","newID","set","CORE_UPSERT_ENTRY","json","normalized","normalizeEntity","result","added","entities","merge","CORE_DELETE_ENTRY","entryID","remove","add","createSelector","createSelectorCreator","defaultMemoize","getState","core","getSpareIDs","keySeq","toOrderedSet","getNextID","first","reducers","Reducers","creators","selectors","getEntryByEntryID","getOpenedModals","modal","opened","Object","freeze","Set","modalClear","modalClose","modalOpen","Selectors","MODAL_CLEAR","MODAL_CLOSE","MODAL_OPEN","getEntryIDs","entryByEntryID","name","entryListInsertionClear","entryListInsertionSubmitAsync","entryListInsertionSetName","entryListInsertionSetDescription","entryListInsertionSetValue","defaulttypes","ENTRY_LIST_INSERTION_CLEAR","ENTRY_LIST_INSERTION_SET_NAME","ENTRY_LIST_INSERTION_SET_DESCRIPTION","ENTRY_LIST_INSERTION_SET_VALUE","entryList","insertion","getName","getDescription","getValue","watchSubmit","select","all","put","insertionSagas","takeLeading","ENTRY_LIST_INSERTION_SUBMIT_ASYNC","insertionReducers","entryListSagas","combineReducers","rootSagas","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistedCore","serializedState","localStorage","getItem","console","log","JSON","parse","err","loadState","store","createStore","applyMiddleware","subscribe","throttle","stringify","toJS","setItem","saveState","run","entry_plural","no","screen","totalValue","yes","app","menu","home","addingNewEntry","i18n","use","LanguageDetector","init","resources","enUS","translations","enUsTranslations","ptBR","fallbackLng","debug","ns","defaultNS","interpolation","escapeValue","formatSeparator","react","wait","createTheme","background","button","text","border","positive","colors","negative","font","weight","medium","dark","default","primary","secondary","accent","disabled","active","shadow","light","themes","css","body2","theme","body1","head","input","Root","styled","styles","IconButton","onClick","children","defaultProps","React","memo","div","ButtonContainer","Title","span","slotButton","visible","onHide","i18next","t","Text","MenuItemWired","route","hideMenu","history","useHistory","useLocation","goTo","useCallback","push","pathname","MainHeaderWired","useState","menuVisible","setMenuVisible","showMenu","HomeScreen","ListItemButton","ItemsContainer","toFixed","replace","moneyValue","format","Math","abs","section","Header","header","EntryCardWired","useSelector","EntryListScreen","entryIDs","dispatch","useDispatch","handleAdd","map","key","PrimaryButton","LinkButton","height","Footer","footer","ConfirmationModal","onConfirm","onDeny","TopRow","Form","form","handleConfirm","handleDeny","nameSlot","descriptionSlot","valueSlot","useDebounce","setValue","initialValue","onSubmitChange","delay","useEffect","handler","setTimeout","clearTimeout","TextInput","placeholder","handleChange","target","type","onChange","EntryDescriptionInputWired","handleDescriptionChange","EntryNameInputWired","handleNameChange","width","textAlign","CurrencyText","MoneyInput","displayValue","setDisplayValue","handleBlur","actualValue","isFinite","NaN","handleFocus","inputmode","onBlur","onFocus","step","EntryValueInputWired","handleValueChange","newValue","AddEntryModalWired","modalList","ModalsWired","openedModals","Modal","has","AppRoot","backgroundColor","App","selectedTheme","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a71435b2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { normalize as normalizeEntity, schema } from 'normalizr';\n\n/**\n * @typedef {Object} EntryModel\n * @property {string} id\n * @property {string} title\n * @property {string} description\n * @property {number} value\n */\n\nconst entrySchema = new schema.Entity('entry');\n\n/**\n * @param {string} id\n * @param {string} title\n * @param {string} description\n * @param {number} value\n * @returns {EntryModel}\n * @constructor\n */\nfunction Entry(id, title, description, value) {\n  return {\n    id,\n    title,\n    description,\n    value,\n  };\n}\n\nexport function normalize(json) {\n  return normalizeEntity(json, entrySchema);\n}\n\nexport default Entry;\n","import { Map } from 'immutable';\nimport { createActions, createReducer, Types as defaultypes } from 'reduxsauce';\nimport { identity } from 'lodash-es';\n\nimport { normalize } from './model/entry';\n\nconst Strategy = {\n  SEQUENTIAL: (current) => (Number.parseInt(current, 10) + 1).toString(),\n};\n\n/**\n * @typedef {Object} CoreState\n * @property {Immutable.Map<string, EntryModel>} entry\n * @property {Map<string, string>} spareIDs\n */\n\n/**\n * @type {CoreState}\n */\nexport const initialState = {\n  entry: Map(),\n  spareIDs: Map([['1', 'SEQUENTIAL']]),\n};\n\nconst clear = () => ({ ...initialState });\n\nconst registerID = (state, { id }) => {\n  const generatorStrategy = state.spareIDs.get(id);\n  let spareIDs = state.spareIDs.filterNot((_, spareID) => spareID === id);\n\n  if (generatorStrategy) {\n    const newID = Strategy[generatorStrategy](id);\n    spareIDs = spareIDs.set(newID, generatorStrategy);\n  }\n\n  return {\n    ...state,\n    spareIDs,\n  };\n};\n\nconst upsertEntry = (state, { entry }) => {\n  const normalized = normalize(entry);\n  const id = normalized.result;\n  const added = Map([[id, normalized.entities.entry[id]]]);\n\n  return {\n    ...state,\n    entry: state.entry.merge(added),\n  };\n};\n\nconst deleteEntry = (state, { entryID }) => ({\n  ...state,\n  entry: state.entry.remove(entryID),\n  spareIDs: state.spareIDs.add(entryID),\n});\n\nexport const { Types, Creators } = createActions({\n  coreClear: [],\n  coreRegisterId: ['id'],\n  coreUpsertEntry: ['entry'],\n  coreDeleteEntry: ['entryID'],\n});\n\nexport default createReducer(initialState, {\n  [defaultypes.DEFAULT]: identity,\n  [Types.CORE_CLEAR]: clear,\n  [Types.CORE_REGISTER_ID]: registerID,\n  [Types.CORE_UPSERT_ENTRY]: upsertEntry,\n  [Types.CORE_DELETE_ENTRY]: deleteEntry,\n});\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const createSelector = createSelectorCreator(defaultMemoize);\n","import {createSelector} from '../util';\n\nconst getState = (state) => state.core;\n\nconst getSpareIDs = createSelector([getState], state => state.spareIDs.keySeq().toOrderedSet());\n\nconst getNextID = createSelector([getSpareIDs], spareIDs => spareIDs.first());\n\nconst getEntryByEntryID = createSelector([getState], (state) => state.entry);\n\nexport default {\n  getEntryByEntryID,\n  getNextID\n};\n","import Reducers, { Creators } from './duck';\nimport Selectors from './selectors';\n\nexport default {\n  reducers: Reducers,\n  creators: Creators,\n  selectors: Selectors,\n};\n","import { createSelector } from '../util';\n\nconst getState = (state) => state.modal;\n\nconst getOpenedModals = createSelector([getState], (state) => state.opened);\n\nexport default {\n  getOpenedModals,\n};\n","import { createActions, createReducer, Types as defaultypes } from 'reduxsauce';\nimport { identity } from 'lodash-es';\nimport { Set } from 'immutable';\n\n/**\n * @typedef {Object} ModalState\n * @property {Immutable.Set<string>} opened\n */\n\n/**\n * @type {ModalState}\n */\nexport const initialState = Object.freeze({\n  opened: Set(),\n});\n\n/**\n * @returns {ModalState}\n */\nconst clear = () => ({ ...initialState });\n\n/**\n * @param {ModalState} state\n * @param {{modal: string}} action\n * @returns {ModalState}\n */\nconst close = (state, { modal }) => ({ ...state, opened: state.opened.remove(modal) });\n\n/**\n * @param {ModalState} state\n * @param {{modal: string}} action\n * @returns {ModalState}\n */\nconst open = (state, { modal }) => ({\n  ...state,\n  opened: state.opened.add(modal),\n});\n\nexport const { Types, Creators } = createActions({\n  modalClear: [],\n  modalClose: ['modal'],\n  modalOpen: ['modal'],\n});\n\nexport default createReducer(initialState, {\n  [defaultypes.DEFAULT]: identity,\n  [Types.MODAL_CLEAR]: clear,\n  [Types.MODAL_CLOSE]: close,\n  [Types.MODAL_OPEN]: open,\n});\n","import Selectors from './selectors';\nimport Reducers, { Creators } from './duck';\n\nexport default {\n  selectors: Selectors,\n  creators: Creators,\n  reducers: Reducers,\n};\n","import { createSelector } from '../util';\nimport core from '../core';\n\nconst getEntryIDs = createSelector(\n  [core.selectors.getEntryByEntryID],\n  (entryByEntryID) => {\n    return entryByEntryID.keySeq().toOrderedSet();\n  },\n);\n\nexport default {\n  getEntryIDs,\n};\n","import { createActions, createReducer, Types as defaulttypes } from 'reduxsauce';\nimport { identity } from 'lodash-es';\n\nconst initialState = {\n  name: '',\n  description: '',\n  value: 0,\n};\n\nconst clear = () => ({ ...initialState });\n\nconst setName = (state, { name }) => ({ ...state, name });\n\nconst setDescription = (state, { description }) => ({ ...state, description });\n\nconst setValue = (state, { value }) => ({ ...state, value });\n\nexport const { Types, Creators } = createActions({\n  entryListInsertionClear: [],\n  entryListInsertionSubmitAsync: ['name', 'description', 'value'],\n  entryListInsertionSetName: ['name'],\n  entryListInsertionSetDescription: ['description'],\n  entryListInsertionSetValue: ['value'],\n});\n\nexport default createReducer(initialState, {\n  [defaulttypes.DEFAULT]: identity,\n  [Types.ENTRY_LIST_INSERTION_CLEAR]: clear,\n  [Types.ENTRY_LIST_INSERTION_SET_NAME]: setName,\n  [Types.ENTRY_LIST_INSERTION_SET_DESCRIPTION]: setDescription,\n  [Types.ENTRY_LIST_INSERTION_SET_VALUE]: setValue,\n});\n","import { createSelector } from '../../util';\n\nconst getState = (state) => state.entryList.insertion;\n\nconst getName = createSelector([getState], (state) => state.name);\n\nconst getDescription = createSelector([getState], (state) => state.description);\n\nconst getValue = createSelector([getState], (state) => state.value);\n\nexport default {\n  getName,\n  getDescription,\n  getValue,\n};\n","import { all, put, takeLeading, select } from 'redux-saga/effects';\n\nimport core from '../../core';\nimport Entry from '../../core/model/entry';\n\nimport Selectors from './selectors';\nimport { Creators, Types } from './duck';\n\nconst { getNextID } = core.selectors;\nconst { getName, getDescription, getValue } = Selectors;\n\nfunction* watchSubmit() {\n  const [id, name, description, value] = [\n    yield select(getNextID),\n    yield select(getName),\n    yield select(getDescription),\n    yield select(getValue),\n  ];\n  const entry = Entry(id, name, description, value);\n  yield all([\n    put(core.creators.coreUpsertEntry(entry)),\n    put(core.creators.coreRegisterId(id)),\n    put(Creators.entryListInsertionClear()),\n  ]);\n}\n\nexport default [takeLeading([Types.ENTRY_LIST_INSERTION_SUBMIT_ASYNC], watchSubmit)];\n","import Reducers, { Creators } from './duck';\nimport Selectors from './selectors';\nimport Sagas from './sagas';\n\nexport const insertionSagas = Sagas;\nexport const insertionReducers = Reducers;\n\nexport default {\n  creators: Creators,\n  selectors: Selectors\n}\n","import { combineReducers } from 'redux';\n\nimport selectors from './selectors';\nimport insertion, { insertionSagas, insertionReducers } from './insertion';\n\nexport const entryListSagas = [...insertionSagas];\n\nexport default {\n  selectors,\n  insertion,\n  reducers: combineReducers({\n    insertion: insertionReducers,\n  }),\n};\n","import { all } from 'redux-saga/effects';\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { throttle } from 'lodash-es';\n\nimport core from './core';\nimport modal from './modal';\nimport entryList, { entryListSagas } from './entry-list';\nimport { loadState, saveState } from './local-storage';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nfunction* rootSagas() {\n  yield all([...entryListSagas]);\n}\n\nconst persistedCore = loadState();\n\nconst store = createStore(\n  combineReducers({\n    core: core.reducers,\n    modal: modal.reducers,\n    entryList: entryList.reducers,\n  }),\n  {\n    core: persistedCore,\n  },\n  composeEnhancers(applyMiddleware(sagaMiddleware)),\n);\n\nstore.subscribe(\n  throttle(() => {\n    saveState({\n      entry: store.getState().core.entry,\n      spareIDs: store.getState().core.spareIDs,\n    });\n  }),\n);\n\nexport default store;\n\nsagaMiddleware.run(rootSagas);\n","import { Map } from 'immutable';\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      // eslint-disable-next-line no-console\n      console.log(`Nothing to load from storage`);\n      return undefined;\n    }\n    const json = JSON.parse(serializedState);\n\n    const entry = Map(json.entry);\n    const spareIDs = Map(json.spareIDs);\n\n    return {\n      entry,\n      spareIDs,\n    };\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(`Error loading from storage: ${err}`);\n    return undefined;\n  }\n};\n\n/**\n * @param {CoreState} state\n */\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify({\n      entry: state.entry.toJS(),\n      spareIDs: state.spareIDs.toJS(),\n    });\n    localStorage.setItem('state', serializedState);\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(`Error saving to storage: ${err}`);\n  }\n};\n","const app = {\n  title: 'Finance',\n  menu: 'Menu',\n};\n\nconst home = {\n  title: 'Home',\n};\n\nconst entryList = {\n  title: '$t(entry_plural)',\n  add: '$t(add) $t(entry)',\n  addingNewEntry: 'Adding new $t(entry)'\n};\n\nexport default {\n  add: 'Add',\n  description: 'Description',\n  entry: 'Entry',\n  entry_plural: 'Entries',\n  no: 'No',\n  screen: 'Screen',\n  title: 'Title',\n  totalValue: 'Total $t(value)',\n  value: 'Value',\n  yes: 'Yes',\n  app,\n  home,\n  entryList,\n};\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport enUsTranslations from './en-US';\n\ni18n.use(LanguageDetector).init({\n  resources: {\n    enUS: {\n      translations: enUsTranslations,\n    },\n    ptBR: {\n      translations: enUsTranslations,\n    },\n  },\n  fallbackLng: 'enUS',\n  debug: true,\n  ns: ['translations'],\n  defaultNS: 'translations',\n  interpolation: {\n    escapeValue: false,\n    formatSeparator: ',',\n  },\n  react: {\n    wait: true,\n  },\n});\n\nexport default i18n;\n","export default {\n  black: '#000000',\n  grey50: '#FAFAFA',\n  grey100: '#F5F5F5',\n  grey200: '#EEEEEE',\n  grey300: '#E0E0E0',\n  grey400: '#BDBDBD',\n  grey700: '#616161',\n  grey800: '#424242',\n  grey850: '#313131',\n  grey900: '#212121',\n  green700: '#388E3C',\n  red700: '#d32f2f',\n  purple700: '#7b1fa2',\n  purple800: '#6a1b9a',\n  purple900: '#4A148C',\n  deepPurple500: '#673ab7',\n  deepPurple600: '#5e35b1',\n  deepPurple700: '#512da8',\n};\n","import colors from './colors';\n\n/**\n * @typedef {Object} Theme\n * @property {{}} background\n * @property {{}} button\n * @property {{}} text\n * @property {{}} border\n */\n\n/**\n * @returns {Theme}\n */\nfunction createTheme(name, background, button, text, border) {\n  return {\n    name,\n    background,\n    button,\n    text: { ...text, positive: colors.green700, negative: colors.red700 },\n    font: {\n      weight: {\n        medium: 500,\n      },\n    },\n    border,\n  };\n}\n\nconst dark = createTheme(\n  'dark',\n  {\n    default: colors.black,\n    primary: colors.grey900,\n    secondary: colors.grey800,\n    accent: colors.grey700,\n    disabled: colors.grey700,\n  },\n  {\n    primary: {\n      background: colors.purple900,\n      active: colors.purple800,\n      text: colors.grey50,\n    },\n    disabled: {\n      text: colors.grey400,\n      background: colors.grey700,\n    },\n  },\n  {\n    primary: colors.grey50,\n    secondary: colors.grey200,\n    disabled: colors.grey400,\n    shadow: colors.purple800,\n  },\n  {\n    primary: colors.grey300,\n    accent: colors.grey100,\n  },\n);\n\nconst light = createTheme(\n  'light',\n  {\n    default: colors.grey50,\n    primary: colors.grey200,\n    secondary: colors.grey100,\n    accent: colors.grey300,\n    disabled: colors.grey400,\n  },\n  {\n    primary: {\n      background: colors.deepPurple500,\n      active: colors.deepPurple700,\n      text: colors.grey50,\n    },\n    disabled: {\n      text: colors.grey700,\n      background: colors.grey400,\n    },\n  },\n  { primary: colors.grey900, secondary: colors.grey800, disabled: colors.grey700, shadow: colors.deepPurple700 },\n  {\n    primary: colors.grey700,\n    accent: colors.grey900,\n  },\n);\n\nconst themes = {\n  dark,\n  light,\n};\n\nexport const themeList = [dark, light];\n\nexport default themes;\n","import { css } from 'styled-components';\n\nexport default {\n  text: css`\n    font-family: 'Roboto';\n  `,\n  body2: ({ theme }) => css`\n    font-size: 0.75rem;\n    color: ${theme.text.secondary};\n\n    &[disabled] {\n      color: ${theme.text.disabled};\n    }\n  `,\n  body1: ({ theme }) => css`\n    font-size: 1rem;\n    color: ${theme.text.primary};\n\n    &[disabled] {\n      color: ${theme.text.disabled};\n    }\n  `,\n  head: ({ theme }) => css`\n    font-size: 1.5rem;\n    color: ${theme.text.primary};\n\n    &[disabled] {\n      color: ${theme.text.disabled};\n    }\n  `,\n  button: css`\n    display: inline-block;\n    border: none;\n    margin: 0;\n    text-decoration: none;\n    cursor: pointer;\n    text-align: center;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    outline: transparent;\n  `,\n  input: ({ theme }) => css`\n    border-color: #616161;\n    border-radius: 0.25rem;\n    border-width: 1px;\n    border-style: solid;\n\n    outline: none;\n\n    transition-property: background;\n    transition-duration: 0.25s;\n    transition-timing-function: ease-in-out;\n\n    padding: 0.25rem 0.5rem;\n\n    background-color: ${theme.background.primary};\n    &:hover,\n    :focus-within {\n      background-color: ${theme.background.secondary};\n    }\n\n    &[disabled] {\n      background-color: ${theme.background.disabled};\n      &:hover,\n      :focus-within {\n        background-color: ${theme.background.disabled};\n      }\n    }\n  `,\n  modal: ({ theme }) => css`\n    z-index: 2;\n    opacity: 95%;\n    position: absolute;\n\n    background: ${theme.background.primary};\n\n    transition-property: left, top, bottom, right;\n    transition-duration: 0.5s;\n    transition-timing-function: ease-in-out;\n  `,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport styles from '../styles';\n\nconst Root = styled.button(\n  styles.text,\n  styles.button,\n  ({ theme }) => css`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    padding: 0.25rem 0.25rem;\n    border-radius: 50%;\n    background: transparent;\n\n    font-size: 1.5em;\n    color: ${theme.text.primary};\n\n    transition: background 0.25s ease-in-out;\n\n    &:hover {\n      background: ${theme.background.accent};\n    }\n    &:active {\n    }\n    &[disabled] {\n      cursor: not-allowed;\n      color: ${theme.button.disabled.text};\n      &:hover {\n        background: transparent;\n        box-shadow: none;\n      }\n      &:active {\n        background: none;\n      }\n    }\n  `,\n);\n\nfunction IconButton({ onClick, children, disabled }) {\n  return (\n    <Root disabled={disabled} onClick={onClick}>\n      {children}\n    </Root>\n  );\n}\n\nIconButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  disabled: PropTypes.bool,\n};\n\nIconButton.defaultProps = {\n  disabled: false,\n};\n\nexport default React.memo(IconButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport styles from './styles';\n\nconst Root = styled.div`\n  position: relative;\n  display: flex;\n  background: ${({ theme }) => theme.background.primary};\n  padding: 1rem;\n  justify-content: center;\n`;\n\nconst ButtonContainer = styled.div(\n  css`\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    padding: 0.5rem;\n  `,\n  styles.head,\n);\n\nconst Title = styled.span(\n  styles.text,\n  styles.head,\n  ({ theme }) => css`\n    color: ${theme.text.primary};\n  `,\n);\n\nfunction Header({ slotButton, children }) {\n  return (\n    <Root>\n      <ButtonContainer>{slotButton}</ButtonContainer>\n      <Title>{children}</Title>\n    </Root>\n  );\n}\n\nHeader.propTypes = {\n  slotButton: PropTypes.node.isRequired,\n  children: PropTypes.string.isRequired,\n};\n\nexport default React.memo(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MdArrowBack } from 'react-icons/md';\n\nimport IconButton from './icon';\n\nfunction GoBackButton({ onClick }) {\n  return (\n    <IconButton onClick={onClick}>\n      <MdArrowBack />\n    </IconButton>\n  );\n}\n\nGoBackButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default React.memo(GoBackButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport i18next from 'i18next';\n\nimport styles from '../styles';\nimport Header from '../header';\nimport GoBackButton from '../buttons/go-back';\n\nconst Root = styled.div(\n  styles.modal,\n  css`\n    width: 90vw;\n    height: 100vh;\n    left: ${({ visible }) => (visible ? 0 : '-100vw')};\n  `,\n);\n\nfunction Menu({ children, visible, onHide }) {\n  return (\n    <Root visible={visible}>\n      <Header slotButton={<GoBackButton onClick={onHide} />}>\n        {i18next.t('app.menu')}\n      </Header>\n      {children}\n    </Root>\n  );\n}\n\nMenu.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element.isRequired).isRequired,\n  visible: PropTypes.bool.isRequired,\n  onHide: PropTypes.func.isRequired,\n};\n\nexport default React.memo(Menu);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport styles from '../styles';\n\nconst Root = styled.div`\n  background: ${({ theme, active }) =>\n    active ? theme.background.default : 'transparent'};\n  padding: 1rem 1rem;\n  cursor: ${({active}) => active ? 'default' : 'pointer'};\n  width: 100%;\n\n  transition: background 0.25s ease-in-out;\n\n  &:hover {\n    background: ${({ theme, active }) =>\n      active ? theme.background.default : theme.background.accent};\n  }\n`;\n\nconst Text = styled.span(styles.text, styles.body1);\n\nfunction MenuItem({ children, active, onClick }) {\n  return (\n    <Root active={active} onClick={onClick}>\n      <Text>{children}</Text>\n    </Root>\n  );\n}\n\nMenuItem.propTypes = {\n  children: PropTypes.string.isRequired,\n  active: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default React.memo(MenuItem);\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation } from 'react-router';\n\nimport MenuItem from '../../components/menu/item';\n\nfunction MenuItemWired({ title, route, hideMenu }) {\n  const history = useHistory();\n  const location = useLocation();\n\n  const goTo = useCallback(() => {\n    hideMenu();\n    history.push(route);\n  }, [hideMenu, route, history]);\n\n  return (\n    <MenuItem onClick={goTo} active={location.pathname === route}>\n      {title}\n    </MenuItem>\n  );\n}\n\nMenuItemWired.propTypes = {\n  title: PropTypes.string.isRequired,\n  route: PropTypes.string.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n};\n\nexport default MenuItemWired;\n","import React, { useCallback, useState } from 'react';\nimport i18next from 'i18next';\nimport { MdMenu } from 'react-icons/md';\n\nimport IconButton from '../../components/buttons/icon';\nimport Header from '../../components/header';\nimport Menu from '../../components/menu';\n\nimport MenuItemWired from './menu-item-wired';\n\nfunction MainHeaderWired() {\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  const showMenu = useCallback(() => setMenuVisible(true), []);\n  const hideMenu = useCallback(() => setMenuVisible(false), []);\n\n  return (\n    <>\n      <Menu onHide={hideMenu} visible={menuVisible}>\n        <MenuItemWired hideMenu={hideMenu} route=\"/\" title={i18next.t('home.title')} />\n        <MenuItemWired hideMenu={hideMenu} route=\"/entry-list\" title={i18next.t('entryList.title')} />\n      </Menu>\n      <Header\n        slotButton={\n          <IconButton onClick={showMenu}>\n            <MdMenu />\n          </IconButton>\n          }\n      >\n        {i18next.t('app.title')}\n      </Header>\n    </>\n  );\n}\n\nexport default MainHeaderWired;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Root = styled.div`\n  background: ${({ theme }) => theme.background.default};\n`;\n\nfunction HomeScreen() {\n  return <Root />;\n}\n\nexport default HomeScreen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport styles from '../styles';\n\nconst Root = styled.button(\n  styles.text,\n  styles.button,\n  ({ theme }) => css`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n\n    opacity: 50%;\n    transition-property: opacity;\n\n    padding: 0.5rem 1rem;\n    border-radius: 0.25rem;\n    background: ${theme.background.primary};\n\n    font-size: 1.75rem;\n    font-weight: ${theme.font.weight.medium};\n    color: ${theme.button.primary.text};\n\n    &:hover {\n      opacity: 60%;\n    }\n    &:active {\n      opacity: 80%;\n    }\n    &[disabled] {\n      cursor: not-allowed;\n      background: ${theme.background.disabled};\n      color: ${theme.text.disabled};\n      opacity: 30%;\n      &:hover {\n        opacity: 30%;\n      }\n      &:active {\n        opacity: 30%;\n      }\n    }\n  `,\n);\n\nfunction ListItemButton({ onClick, children, disabled }) {\n  return (\n    <Root disabled={disabled} onClick={onClick}>\n      {children}\n    </Root>\n  );\n}\n\nListItemButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  disabled: PropTypes.bool,\n};\n\nListItemButton.defaultProps = {\n  disabled: false,\n};\n\nexport default React.memo(ListItemButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Root = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst ItemsContainer = styled.div`\n  padding: 0.5rem;\n  overflow-y: auto;\n`;\n\nfunction EntryList({ children }) {\n  return (\n    <Root>\n      <ItemsContainer>{children}</ItemsContainer>\n    </Root>\n  );\n}\n\nEntryList.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default React.memo(EntryList);\n","export default {\n  money: value => value\n    .toFixed(2)\n    .replace('.', ',')\n    .replace(/(\\d)(?=(\\d{3})+,)/g, '$1.')\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport format from '../utils/format';\n\nimport styles from './styles';\n\nconst Root = styled.span(\n  styles.text,\n  styles.body1,\n  ({ theme, positive }) => css`\n    font-weight: ${theme.font.weight.medium};\n    color: ${positive ? theme.text.positive : theme.text.negative};\n  `,\n);\n\nfunction MoneyText({ children }) {\n  const moneyValue = format.money(Math.abs(children));\n\n  return <Root positive={children > 0}>{`R$ ${moneyValue}`}</Root>;\n}\n\nMoneyText.propTypes = {\n  children: PropTypes.number.isRequired,\n};\n\nexport default React.memo(MoneyText);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport MoneyText from '../../../components/money-text';\nimport styles from '../../../components/styles';\n\nconst Root = styled.section`\n  background: ${({ theme }) => theme.background.primary};\n  padding: 1rem;\n  border-radius: 0.25rem;\n  width: 100%;\n  margin-top: 0.5rem;\n`;\n\nconst Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nconst Text = styled.span(styles.text, styles.body2);\n\nconst Title = styled.span(\n  styles.text,\n  styles.body1,\n  ({ theme }) => css`\n    font-weight: ${theme.font.weight.medium};\n  `,\n);\n\nfunction EntryCard({ title, value, description }) {\n  return (\n    <Root>\n      <Header>\n        <Title>{title}</Title>\n        <MoneyText>{value}</MoneyText>\n      </Header>\n      <Text>{description}</Text>\n    </Root>\n  );\n}\n\nEntryCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nexport default React.memo(EntryCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport core from '../../store/core';\n\nimport EntryCard from './components/entry-card';\n\nconst { getEntryByEntryID } = core.selectors;\n\nfunction EntryCardWired({ entryID }) {\n  const entry = useSelector(getEntryByEntryID).get(entryID);\n\n  return (\n    <EntryCard value={entry.value} description={entry.description} title={entry.title} />\n  );\n}\n\nEntryCardWired.propTypes = {\n  entryID: PropTypes.string.isRequired,\n};\n\nexport default EntryCardWired;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MdAdd } from 'react-icons/md';\nimport styled from 'styled-components';\n\nimport entryList from '../../store/entry-list';\nimport modal from '../../store/modal';\nimport ListItemButton from '../../components/buttons/list-item';\n\nimport EntryList from './components';\nimport EntryCardWired from './entry-card-wired';\n\nconst { getEntryIDs } = entryList.selectors;\n\nconst ButtonContainer = styled.div`\n  padding: 0.5rem 0;\n`;\n\nfunction EntryListScreen() {\n  const entryIDs = useSelector(getEntryIDs);\n\n  const dispatch = useDispatch();\n\n  const handleAdd = useCallback(() => {\n    dispatch(modal.creators.modalOpen('AddEntryModalWired'));\n  }, [dispatch]);\n\n  return (\n    <EntryList>\n      {entryIDs.map((entryID) => (\n        <EntryCardWired key={entryID} entryID={entryID} />\n      ))}\n      <ButtonContainer>\n        <ListItemButton onClick={handleAdd}>\n          <MdAdd />\n        </ListItemButton>\n      </ButtonContainer>\n    </EntryList>\n  );\n}\n\nexport default EntryListScreen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport styles from '../styles';\n\nconst Root = styled.button(\n  styles.text,\n  styles.button,\n  ({ theme }) => css`\n    display: flex;\n    align-items: center;\n\n    padding: 0.5rem 1rem;\n    border-radius: 0.25rem;\n    background: ${theme.button.primary.background};\n\n    font-size: 1em;\n    font-weight: ${theme.font.weight.medium};\n    color: ${theme.button.primary.text};\n\n    &:hover {\n      box-shadow: inset 0 0 1.5rem ${theme.button.primary.active};\n    }\n    &:active {\n      background: ${theme.button.primary.active};\n    }\n    &[disabled] {\n      cursor: not-allowed;\n      background: ${theme.button.disabled.background};\n      color: ${theme.button.disabled.text};\n      &:hover {\n        box-shadow: none;\n      }\n      &:active {\n        background: none;\n      }\n    }\n  `,\n);\n\nfunction PrimaryButton({ onClick, children, disabled }) {\n  return (\n    <Root disabled={disabled} onClick={onClick}>\n      {children}\n    </Root>\n  );\n}\n\nPrimaryButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  disabled: PropTypes.bool,\n};\n\nPrimaryButton.defaultProps = {\n  disabled: false,\n};\n\nexport default React.memo(PrimaryButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport styles from '../styles';\n\nconst Root = styled.button(\n  styles.text,\n  styles.button,\n  ({ theme }) => css`\n    padding: 0.5rem 1rem;\n    background: transparent;\n\n    font-size: 1em;\n    font-weight: ${theme.font.weight.medium};\n    color: ${theme.text.primary};\n\n    &:hover {\n      text-decoration: underline;\n    }\n    &[disabled] {\n      cursor: not-allowed;\n      color: ${theme.button.disabled.text};\n      &:hover {\n        text-decoration: none;\n      }\n    }\n  `,\n);\n\nfunction LinkButton({ onClick, children, disabled }) {\n  return (\n    <Root disabled={disabled} onClick={onClick}>\n      {children}\n    </Root>\n  );\n}\n\nLinkButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  disabled: PropTypes.bool,\n};\n\nLinkButton.defaultProps = {\n  disabled: false,\n};\n\nexport default React.memo(LinkButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport i18next from 'i18next';\n\nimport styles from '../styles';\nimport PrimaryButton from '../buttons/primary';\nimport LinkButton from '../buttons/link';\n\nconst Root = styled.div(\n  styles.modal,\n  ({ visible, height }) => css`\n    bottom: ${visible ? 0 : `-${height}`};\n    right: 0;\n    left: 0;\n    display: flex;\n    height: ${height};\n    padding-top: 1rem;\n    align-items: center;\n    flex-direction: column;\n  `,\n);\n\nconst Footer = styled.footer`\n  display: flex;\n  padding: 1rem 0;\n`;\n\nfunction ConfirmationModal({ children, onConfirm, onDeny, visible, height }) {\n  return (\n    <Root visible={visible} height={height}>\n      {children}\n      <Footer>\n        <PrimaryButton onClick={onConfirm}>{i18next.t('yes')}</PrimaryButton>\n        <LinkButton onClick={onDeny}>{i18next.t('no')}</LinkButton>\n      </Footer>\n    </Root>\n  );\n}\n\nConfirmationModal.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  height: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n  onDeny: PropTypes.func.isRequired,\n};\n\nexport default ConfirmationModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport i18next from 'i18next';\n\nimport ConfirmationModal from '../../../components/modal/confirmation';\nimport styles from '../../../components/styles';\n\nconst TopRow = styled.div`\n  display: grid;\n  grid-gap: 0.5rem;\n  grid-template-columns: auto 8rem;\n  padding-bottom: 0.5rem;\n  width: 100%;\n`;\nconst Form = styled.form`\n  width: 100%;\n  height: 100%;\n  padding: 0.5rem;\n`;\nconst Title = styled.header(\n  styles.text,\n  styles.head,\n  css`\n    text-align: center;\n    width: 100%;\n    padding-bottom: 1rem;\n  `,\n);\n\nfunction AddEntryModal({\n  handleConfirm,\n  handleDeny,\n  nameSlot,\n  descriptionSlot,\n  valueSlot,\n  visible,\n}) {\n  return (\n    <ConfirmationModal\n      onConfirm={handleConfirm}\n      onDeny={handleDeny}\n      visible={visible}\n      height=\"13rem\"\n    >\n      <Form>\n        <Title>{i18next.t('entryList.addingNewEntry')}</Title>\n        <TopRow>\n          {nameSlot}\n          {valueSlot}\n        </TopRow>\n        {descriptionSlot}\n      </Form>\n    </ConfirmationModal>\n  );\n}\n\nAddEntryModal.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  nameSlot: PropTypes.node.isRequired,\n  descriptionSlot: PropTypes.node.isRequired,\n  valueSlot: PropTypes.node.isRequired,\n  handleConfirm: PropTypes.func.isRequired,\n  handleDeny: PropTypes.func.isRequired,\n};\n\nexport default React.memo(AddEntryModal);\n","import { useEffect } from 'react';\n\n/**\n * @param {string | number} value\n * @param {function(string | number):void} setValue\n * @param {string | number} initialValue\n * @param {function(string | number):void} onSubmitChange\n * @param {?number} delay\n */\nfunction useDebounce(value, setValue, initialValue, onSubmitChange, delay = 0) {\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      if (value === initialValue) return;\n      onSubmitChange(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [initialValue, value, delay, onSubmitChange]);\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue, setValue]);\n}\n\nexport default useDebounce;\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport useDebounce from '../../hooks/use-debounce';\nimport styles from '../styles';\n\nconst Root = styled.input(\n  styles.text,\n  styles.body1,\n  styles.input,\n  css`\n    width: 100%;\n  `,\n);\n\nfunction TextInput({ placeholder, initialValue, disabled, onSubmitChange }) {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      setValue(target.value);\n    },\n    [setValue],\n  );\n\n  useDebounce(value, setValue, initialValue, onSubmitChange);\n\n  return (\n    <Root\n      type=\"text\"\n      disabled={disabled}\n      value={value}\n      onChange={handleChange}\n      placeholder={placeholder}\n    />\n  );\n}\n\nTextInput.propTypes = {\n  disabled: PropTypes.bool,\n  initialValue: PropTypes.string.isRequired,\n  onSubmitChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string.isRequired,\n};\n\nTextInput.defaultProps = {\n  disabled: false,\n};\n\nexport default TextInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\n\nimport TextInput from '../../../components/input/text';\n\nfunction EntryDescriptionInput({ initialValue, onChange }) {\n  return (\n    <TextInput\n      placeholder={i18next.t('description')}\n      onSubmitChange={onChange}\n      initialValue={initialValue}\n    />\n  );\n}\nEntryDescriptionInput.propTypes = {\n  initialValue: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default React.memo(EntryDescriptionInput);\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport entryList from '../../store/entry-list';\n\nimport EntryDescriptionInput from './components/entry-description-input';\n\nconst { entryListInsertionSetDescription } = entryList.insertion.creators;\nconst { getDescription } = entryList.insertion.selectors;\n\nfunction EntryDescriptionInputWired() {\n  const description = useSelector(getDescription);\n\n  const dispatch = useDispatch();\n\n  const handleDescriptionChange = useCallback(\n    (value) => {\n      dispatch(entryListInsertionSetDescription(value));\n    },\n    [dispatch],\n  );\n\n  return (\n    <EntryDescriptionInput\n      onChange={handleDescriptionChange}\n      initialValue={description}\n    />\n  );\n}\n\nexport default EntryDescriptionInputWired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\n\nimport TextInput from '../../../components/input/text';\n\nfunction EntryNameInput({ initialValue, onChange }) {\n\n  return (\n    <TextInput\n      placeholder={i18next.t('title')}\n      onSubmitChange={onChange}\n      initialValue={initialValue}\n    />\n  );\n}\nEntryNameInput.propTypes = {\n  initialValue: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default React.memo(EntryNameInput);\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport entryList from '../../store/entry-list';\n\nimport EntryNameInput from './components/entry-name-input';\n\nconst { entryListInsertionSetName } = entryList.insertion.creators;\nconst { getName } = entryList.insertion.selectors;\n\nfunction EntryNameInputWired() {\n  const name = useSelector(getName);\n\n  const dispatch = useDispatch();\n\n  const handleNameChange = useCallback(\n    (value) => {\n      dispatch(entryListInsertionSetName(value));\n    },\n    [dispatch],\n  );\n\n  return <EntryNameInput onChange={handleNameChange} initialValue={name} />;\n}\n\nexport default EntryNameInputWired;\n","export default {\n  money: (value) => {\n    return Number(value.replace('.', '').replace(',', '.'));\n  },\n};\n","import styled, { css } from 'styled-components';\n\nimport styles from '../styles';\n\nexport default styled.input(\n  styles.text,\n  styles.body1,\n  ({ width, textAlign = 'start' }) => css`\n    border: none;\n    outline: none;\n    background: none;\n\n    width: ${width};\n    text-align: ${textAlign};\n  `,\n);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport format from '../../utils/format';\nimport parse from '../../utils/parse';\nimport useDebounce from '../../hooks/use-debounce';\nimport styles from '../styles';\n\nimport ResetInput from './reset';\n\nconst Root = styled.div(\n  styles.input,\n  css`\n    position: relative;\n    width: 8rem;\n  `,\n);\n\nconst CurrencyText = styled.span(\n  styles.text,\n  styles.body1,\n  css`\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0.5rem;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  `,\n);\n\nfunction MoneyInput({ initialValue, disabled, onSubmitChange }) {\n  const [value, setValue] = useState(initialValue);\n  const [displayValue, setDisplayValue] = useState('');\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      setDisplayValue(target.value);\n    },\n    [setDisplayValue],\n  );\n\n  const handleBlur = useCallback(({ target }) => {\n    const actualValue = parse.money(target.value);\n    if (Number.isFinite(actualValue)) {\n      setValue(actualValue);\n      setDisplayValue(format.money(actualValue));\n    } else {\n      setValue(Number.NaN);\n      setDisplayValue('');\n    }\n  }, []);\n\n  const handleFocus = useCallback(() => {\n    if (value === 0) setDisplayValue('');\n  }, [value, setDisplayValue]);\n\n  useEffect(() => {\n    setDisplayValue(format.money(value));\n  }, [value]);\n\n  useDebounce(value, setValue, initialValue, onSubmitChange);\n  return (\n    <Root disabled={disabled}>\n      <CurrencyText disabled={disabled}>R$</CurrencyText>\n      <ResetInput\n        type=\"text\"\n        inputmode=\"numeric\"\n        disabled={disabled}\n        value={displayValue}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        onFocus={handleFocus}\n        width=\"100%\"\n        textAlign=\"right\"\n        step=\"0.01\"\n      />\n    </Root>\n  );\n}\n\nMoneyInput.propTypes = {\n  disabled: PropTypes.bool,\n  initialValue: PropTypes.number.isRequired,\n  onSubmitChange: PropTypes.func.isRequired,\n};\n\nMoneyInput.defaultProps = {\n  disabled: false,\n};\n\nexport default MoneyInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MoneyInput from '../../../components/input/money';\n\nfunction EntryValueInput({ initialValue, onChange }) {\n  return <MoneyInput onSubmitChange={onChange} initialValue={initialValue} />;\n}\nEntryValueInput.propTypes = {\n  initialValue: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default React.memo(EntryValueInput);\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport entryList from '../../store/entry-list';\n\nimport EntryValueInput from './components/entry-value-input';\n\nconst { entryListInsertionSetValue } = entryList.insertion.creators;\nconst { getValue } = entryList.insertion.selectors;\n\nfunction EntryValueInputWired() {\n  const value = useSelector(getValue);\n\n  const dispatch = useDispatch();\n\n  const handleValueChange = useCallback(\n    (newValue) => {\n      dispatch(entryListInsertionSetValue(newValue));\n    },\n    [dispatch],\n  );\n\n  return <EntryValueInput onChange={handleValueChange} initialValue={value} />;\n}\n\nexport default EntryValueInputWired;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport entryList from '../../store/entry-list';\nimport modal from '../../store/modal';\n\nimport AddEntryModal from './components/add-entry-modal';\nimport EntryDescriptionInputWired from './entry-description-input-wired';\nimport EntryNameInputWired from './entry-name-input-wired';\nimport EntryValueInputWired from './entry-value-input-wired';\n\nfunction AddEntryModalWired({ visible }) {\n  const dispatch = useDispatch();\n\n  const handleConfirm = useCallback(() => {\n    dispatch(entryList.insertion.creators.entryListInsertionSubmitAsync());\n    dispatch(modal.creators.modalClose('AddEntryModalWired'));\n  }, [dispatch]);\n\n  const handleDeny = useCallback(() => {\n    dispatch(modal.creators.modalClose('AddEntryModalWired'));\n  }, [dispatch]);\n\n  return (\n    <AddEntryModal\n      visible={visible}\n      handleDeny={handleDeny}\n      handleConfirm={handleConfirm}\n      nameSlot={<EntryNameInputWired />}\n      descriptionSlot={<EntryDescriptionInputWired />}\n      valueSlot={<EntryValueInputWired />}\n    />\n  );\n}\n\nAddEntryModalWired.propTypes = {\n  visible: PropTypes.bool.isRequired,\n};\n\nexport default AddEntryModalWired;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Set } from 'immutable';\n\nimport modal from '../../store/modal';\nimport AddEntryModalWired from '../entry-list/add-entry-modal-wired';\n\nconst { getOpenedModals } = modal.selectors;\n\nconst modalList = Set([AddEntryModalWired]);\n\nfunction ModalsWired() {\n  const openedModals = useSelector(getOpenedModals);\n  return modalList.map((Modal) => {\n    const { name } = Modal;\n    const key = `modal-${name}`;\n    return <Modal key={key} visible={openedModals.has(name)} />;\n  });\n}\n\nexport default ModalsWired;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { I18nextProvider } from 'react-i18next';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport i18next from '../../i18n';\nimport themes from '../../themes';\nimport MainHeaderWired from './main-header-wired';\nimport HomeScreen from '../home';\nimport EntryListScreen from '../entry-list';\nimport ModalsWired from './modals-wired';\n\nconst AppRoot = styled.div`\n  position: relative;\n  background-color: ${({ backgroundColor }) => backgroundColor};\n  width: 100vw;\n  height: 100%;\n`;\n\nfunction App() {\n  const [selectedTheme] = useState('dark');\n  const theme = themes[selectedTheme];\n\n  return (\n    <ThemeProvider theme={theme}>\n      <I18nextProvider i18n={i18next}>\n        <AppRoot backgroundColor={theme.background.default}>\n          <Router>\n            <ModalsWired />\n            <MainHeaderWired />\n            <Switch>\n              <Route exact path=\"/\" component={HomeScreen} />\n              <Route exact path=\"/entry-list\" component={EntryListScreen} />\n            </Switch>\n          </Router>\n        </AppRoot>\n      </I18nextProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport '@csstools/normalize.css';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport App from './screens/App';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}