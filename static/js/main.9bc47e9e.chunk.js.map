{"version":3,"sources":["serviceWorker.js","store/core/model/entry.js","store/core/duck.js","store/util.js","store/core/index.js","store/core/selectors.js","store/modal/selectors.jsx","store/modal/duck.js","store/modal/index.jsx","store/index.js","i18n/en-US.js","i18n/index.js","themes/colors.js","themes/index.js","components/styles.js","components/buttons/icon.jsx","components/header.jsx","components/buttons/go-back.jsx","components/menu/index.jsx","components/menu/item.jsx","wired/menu-item-wired.jsx","wired/main-header-wired.jsx","screens/home/index.jsx","store/entry-list/index.js","store/entry-list/selectors.js","components/entry-list/index.jsx","components/money-text.jsx","components/entry-list/entry-card.jsx","screens/entry-list/entry-card-wired.jsx","screens/entry-list/index.jsx","components/buttons/primary.jsx","components/buttons/link.jsx","components/modal/confirmation.jsx","wired/test.jsx","wired/modals-wired.jsx","App.jsx","index.jsx"],"names":["Boolean","window","location","hostname","match","entrySchema","schema","Entity","Entry","initialState","Object","freeze","entry","Map","createActions","coreClear","coreUpsertEntry","coreDeleteEntry","Types","Creators","createReducer","defaultypes","DEFAULT","identity","CORE_CLEAR","CORE_UPSERT_ENTRY","state","json","normalized","normalizeEntity","id","result","added","entities","merge","CORE_DELETE_ENTRY","entryID","remove","createSelector","createSelectorCreator","defaultMemoize","reducers","Reducers","creators","selectors","getEntryByEntryID","core","getOpenedModals","modal","opened","Set","modalClear","modalClose","modalOpen","Selectors","MODAL_CLEAR","MODAL_CLOSE","MODAL_OPEN","add","rootSagas","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","all","createStore","combineReducers","applyMiddleware","run","screen","yes","no","app","title","menu","home","entryList","i18n","use","LanguageDetector","init","resources","enUS","translations","enUsTranslations","ptBR","fallbackLng","debug","ns","defaultNS","interpolation","escapeValue","formatSeparator","react","wait","createTheme","name","background","button","text","border","positive","colors","negative","font","weight","medium","dark","default","primary","secondary","accent","disabled","active","shadow","light","themes","css","body2","theme","body1","input","Root","styled","styles","IconButton","onClick","children","defaultProps","React","memo","div","ButtonContainer","Title","span","slotButton","visible","onHide","i18next","t","Text","MenuItemWired","route","history","useHistory","useLocation","goTo","useCallback","push","pathname","Absolute","MainHeaderWired","useState","menuVisible","setMenuVisible","showMenu","hideMenu","HomeScreen","getEntryIDs","entryByEntryID","keySeq","toOrderedSet","ItemsContainer","moneyValue","Math","abs","toFixed","replace","section","Header","header","value","description","EntryCardWired","useSelector","get","EntryListScreen","entryIDs","map","PrimaryButton","LinkButton","Footer","footer","ConfirmationModal","message","onConfirm","onDeny","TestModal","dispatch","useDispatch","handleConfirm","setTimeout","handleDeny","modalList","ModalsWired","openedModals","Modal","key","has","AppRoot","backgroundColor","App","selectedTheme","exact","path","component","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.9bc47e9e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { normalize as normalizeEntity, schema } from 'normalizr';\n\n/**\n * @typedef {Object} EntryModel\n * @property {string} id\n * @property {string} title\n * @property {string} description\n * @property {number} value\n */\n\nconst entrySchema = new schema.Entity('entry');\n\n/**\n * @param {string} id\n * @param {string} title\n * @param {string} description\n * @param {number} value\n * @returns {EntryModel}\n * @constructor\n */\nfunction Entry(id, title, description, value) {\n  return {\n    id,\n    title,\n    description,\n    value,\n  };\n}\n\nexport function normalize(json) {\n  return normalizeEntity(json, entrySchema);\n}\n\nexport default Entry;\n","import { Map } from 'immutable';\nimport { createActions, createReducer, Types as defaultypes } from 'reduxsauce';\nimport { identity } from 'lodash-es';\nimport { normalize } from './model/entry';\n\n/**\n * @typedef {Object} CoreState\n * @property {Immutable.Map<string, EntryModel>} entry\n *\n * @type {CoreState}\n */\nexport const initialState = Object.freeze({\n  entry: Map(),\n});\n\n/**\n * @returns {CoreState}\n */\nconst clear = () => ({ ...initialState });\n\n/**\n * @param {CoreState} state\n * @param {{entry: EntryModel}} action\n * @returns {CoreState}\n */\nconst upsertEntry = (state, { entry }) => {\n  const normalized = normalize(entry);\n  const id = normalized.result;\n  const added = Map([[id, normalized.entities.entry[id]]]);\n\n  return {\n    ...state,\n    entry: state.entry.merge(added),\n  };\n};\n\n/**\n * @param {CoreState} state\n * @param {{entryID: string}} action\n * @returns {CoreState}\n */\nconst deleteEntry = (state, { entryID }) => ({\n  ...state,\n  entry: state.entry.remove(entryID),\n});\n\nexport const { Types, Creators } = createActions({\n  coreClear: [],\n  coreUpsertEntry: ['entry'],\n  coreDeleteEntry: ['entryID'],\n});\n\nexport default createReducer(initialState, {\n  [defaultypes.DEFAULT]: identity,\n  [Types.CORE_CLEAR]: clear,\n  [Types.CORE_UPSERT_ENTRY]: upsertEntry,\n  [Types.CORE_DELETE_ENTRY]: deleteEntry,\n});\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const createSelector = createSelectorCreator(defaultMemoize);\n","import Reducers, { Creators } from './duck';\nimport Selectors from './selectors';\n\nexport default {\n  reducers: Reducers,\n  creators: Creators,\n  selectors: Selectors,\n};\n","import {createSelector} from '../util';\n\nconst getState = (state) => state.core;\n\nconst getEntryByEntryID = createSelector([getState], (state) => state.entry);\n\nexport default {\n  getEntryByEntryID,\n};\n","import { createSelector } from '../util';\n\nconst getState = (state) => state.modal;\n\nconst getOpenedModals = createSelector([getState], (state) => state.opened);\n\nexport default {\n  getOpenedModals,\n};\n","import { createActions, createReducer, Types as defaultypes } from 'reduxsauce';\nimport { identity } from 'lodash-es';\nimport { Set } from 'immutable';\n\n/**\n * @typedef {Object} ModalState\n * @property {Immutable.Set<string>} opened\n */\n\n/**\n * @type {ModalState}\n */\nexport const initialState = Object.freeze({\n  opened: Set(),\n});\n\n/**\n * @returns {ModalState}\n */\nconst clear = () => ({ ...initialState });\n\n/**\n * @param {ModalState} state\n * @param {{modal: string}} action\n * @returns {ModalState}\n */\nconst close = (state, { modal }) => ({ ...state, opened: state.opened.remove(modal) });\n\n/**\n * @param {ModalState} state\n * @param {{modal: string}} action\n * @returns {ModalState}\n */\nconst open = (state, { modal }) => ({\n  ...state,\n  opened: state.opened.add(modal),\n});\n\nexport const { Types, Creators } = createActions({\n  modalClear: [],\n  modalClose: ['modal'],\n  modalOpen: ['modal'],\n});\n\nexport default createReducer(initialState, {\n  [defaultypes.DEFAULT]: identity,\n  [Types.MODAL_CLEAR]: clear,\n  [Types.MODAL_CLOSE]: close,\n  [Types.MODAL_OPEN]: open,\n});\n","import Selectors from './selectors';\nimport Reducers, { Creators } from './duck';\n\nexport default {\n  selectors: Selectors,\n  creators: Creators,\n  reducers: Reducers,\n};\n","import { all } from 'redux-saga/effects';\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport core from './core';\nimport modal from './modal';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nfunction* rootSagas() {\n  yield all([]);\n}\n\nexport default createStore(\n  combineReducers({ core: core.reducers, modal: modal.reducers }),\n  composeEnhancers(applyMiddleware(sagaMiddleware)),\n);\n\nsagaMiddleware.run(rootSagas);\n","const app = {\n  title: 'Finance',\n  menu: 'Menu',\n};\n\nconst home = {\n  title: 'Home',\n};\n\nconst entryList = {\n  title: 'Entries',\n};\n\nexport default {\n  screen: 'Screen',\n  yes: 'Yes',\n  no: 'No',\n  app,\n  home,\n  entryList,\n};\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport enUsTranslations from './en-US';\n\ni18n.use(LanguageDetector).init({\n  resources: {\n    enUS: {\n      translations: enUsTranslations,\n    },\n    ptBR: {\n      translations: enUsTranslations,\n    },\n  },\n  fallbackLng: 'enUS',\n  debug: true,\n  ns: ['translations'],\n  defaultNS: 'translations',\n  interpolation: {\n    escapeValue: false,\n    formatSeparator: ',',\n  },\n  react: {\n    wait: true,\n  },\n});\n\nexport default i18n;\n","export default {\n  black: '#000000',\n  grey50: '#FAFAFA',\n  grey100: '#F5F5F5',\n  grey200: '#EEEEEE',\n  grey300: '#E0E0E0',\n  grey400: '#BDBDBD',\n  grey700: '#616161',\n  grey800: '#424242',\n  grey850: '#313131',\n  grey900: '#212121',\n  green700: '#388E3C',\n  red700: '#d32f2f',\n  purple700: '#7b1fa2',\n  purple800: '#6a1b9a',\n  purple900: '#4A148C',\n  deepPurple500: '#673ab7',\n  deepPurple600: '#5e35b1',\n  deepPurple700: '#512da8',\n};\n","import colors from './colors';\n\n/**\n * @typedef {Object} Theme\n * @property {{}} background\n * @property {{}} button\n * @property {{}} text\n * @property {{}} border\n */\n\n/**\n * @returns {Theme}\n */\nfunction createTheme(name, background, button, text, border) {\n  return {\n    name,\n    background,\n    button,\n    text: { ...text, positive: colors.green700, negative: colors.red700 },\n    font: {\n      weight: {\n        medium: 500,\n      },\n    },\n    border,\n  };\n}\n\nconst dark = createTheme(\n  'dark',\n  {\n    default: colors.black,\n    primary: colors.grey900,\n    secondary: colors.grey800,\n    accent: colors.grey700,\n    disabled: colors.grey700,\n  },\n  {\n    primary: {\n      background: colors.purple900,\n      active: colors.purple800,\n      text: colors.grey50,\n    },\n    disabled: {\n      text: colors.grey400,\n      background: colors.grey700,\n    },\n  },\n  {\n    primary: colors.grey50,\n    secondary: colors.grey200,\n    disabled: colors.grey400,\n    shadow: colors.purple800,\n  },\n  {\n    primary: colors.grey300,\n    accent: colors.grey100,\n  },\n);\n\nconst light = createTheme(\n  'light',\n  {\n    default: colors.grey50,\n    primary: colors.grey200,\n    secondary: colors.grey100,\n    accent: colors.grey300,\n    disabled: colors.grey400,\n  },\n  {\n    primary: {\n      background: colors.deepPurple500,\n      active: colors.deepPurple700,\n      text: colors.grey50,\n    },\n    disabled: {\n      text: colors.grey700,\n      background: colors.grey400,\n    },\n  },\n  { primary: colors.grey900, secondary: colors.grey800, disabled: colors.grey700, shadow: colors.deepPurple700 },\n  {\n    primary: colors.grey700,\n    accent: colors.grey900,\n  },\n);\n\nconst themes = {\n  dark,\n  light,\n};\n\nexport const themeList = [dark, light];\n\nexport default themes;\n","import { css } from 'styled-components';\n\nexport default {\n  text: css`\n    font-family: 'Roboto';\n  `,\n  body2: ({ theme }) => css`\n    font-size: 0.75rem;\n    color: ${theme.text.secondary};\n\n    &[disabled] {\n      color: ${({ theme }) => theme.text.disabled};\n    }\n  `,\n  body1: ({ theme }) => css`\n    font-size: 1rem;\n    color: ${theme.text.primary};\n\n    &[disabled] {\n      color: ${({ theme }) => theme.text.disabled};\n    }\n  `,\n  title: css`\n    font-size: 1.5rem;\n  `,\n  button: css`\n    display: inline-block;\n    border: none;\n    margin: 0;\n    text-decoration: none;\n    cursor: pointer;\n    text-align: center;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    outline: transparent;\n  `,\n  input: ({ theme }) => css`\n    border-color: #616161;\n    border-radius: 0.25rem;\n    border-width: 1px;\n    border-style: solid;\n\n    outline: none;\n\n    transition-property: background;\n    transition-duration: 0.25s;\n    transition-timing-function: ease-in-out;\n\n    padding: 0.25rem 0.5rem;\n\n    background-color: ${theme.background.primary};\n    &:hover,\n    :focus-within {\n      background-color: ${theme.background.secondary};\n    }\n\n    &[disabled] {\n      background-color: ${theme.background.disabled};\n      &:hover,\n      :focus-within {\n        background-color: ${theme.background.disabled};\n      }\n    }\n  `,\n  modal: ({ theme }) => css`\n    z-index: 2;\n    opacity: 95%;\n    position: absolute;\n\n    background: ${theme.background.primary};\n\n    transition-property: left, top, bottom, right;\n    transition-duration: 0.5s;\n    transition-timing-function: ease-in-out;\n  `,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport styles from '../styles';\n\nconst Root = styled.button(\n  styles.text,\n  styles.button,\n  ({ theme }) => css`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    padding: 0.25rem 0.25rem;\n    border-radius: 50%;\n    background: transparent;\n\n    font-size: 1.5em;\n    color: ${theme.text.primary};\n\n    transition: background 0.25s ease-in-out;\n\n    &:hover {\n      background: ${theme.background.accent};\n    }\n    &:active {\n    }\n    &[disabled] {\n      cursor: not-allowed;\n      color: ${theme.button.disabled.text};\n      &:hover {\n        background: transparent;\n        box-shadow: none;\n      }\n      &:active {\n        background: none;\n      }\n    }\n  `,\n);\n\nfunction IconButton({ onClick, children, disabled }) {\n  return (\n    <Root disabled={disabled} onClick={onClick}>\n      {children}\n    </Root>\n  );\n}\n\nIconButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  disabled: PropTypes.bool,\n};\n\nIconButton.defaultProps = {\n  disabled: false,\n};\n\nexport default React.memo(IconButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport styles from './styles';\n\nconst Root = styled.div`\n  position: relative;\n  display: flex;\n  background: ${({ theme }) => theme.background.primary};\n  padding: 1rem;\n  justify-content: center;\n`;\n\nconst ButtonContainer = styled.div(\n  css`\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    padding: 0.5rem;\n  `,\n  styles.title,\n);\n\nconst Title = styled.span(\n  styles.text,\n  styles.title,\n  ({ theme }) => css`\n    color: ${theme.text.primary};\n  `,\n);\n\nfunction Header({ slotButton, children }) {\n  return (\n    <Root>\n      <ButtonContainer>{slotButton}</ButtonContainer>\n      <Title>{children}</Title>\n    </Root>\n  );\n}\n\nHeader.propTypes = {\n  slotButton: PropTypes.node.isRequired,\n  children: PropTypes.string.isRequired,\n};\n\nexport default React.memo(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MdArrowBack } from 'react-icons/md';\n\nimport IconButton from './icon';\n\nfunction GoBackButton({ onClick }) {\n  return (\n    <IconButton onClick={onClick}>\n      <MdArrowBack />\n    </IconButton>\n  );\n}\n\nGoBackButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default React.memo(GoBackButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport i18next from 'i18next';\n\nimport styles from '../styles';\nimport Header from '../header';\nimport GoBackButton from '../buttons/go-back';\n\nconst Root = styled.div(\n  styles.modal,\n  css`\n    width: 90vw;\n    height: 100vh;\n    left: ${({ visible }) => (visible ? 0 : '-100vw')};\n  `,\n);\n\nfunction Menu({ children, visible, onHide }) {\n  return (\n    <Root visible={visible}>\n      <Header slotButton={<GoBackButton onClick={onHide} />}>\n        {i18next.t('app.menu')}\n      </Header>\n      {children}\n    </Root>\n  );\n}\n\nMenu.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element.isRequired).isRequired,\n  visible: PropTypes.bool.isRequired,\n  onHide: PropTypes.func.isRequired,\n};\n\nexport default React.memo(Menu);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport styles from '../styles';\n\nconst Root = styled.div`\n  background: ${({ theme, active }) =>\n    active ? theme.background.default : 'transparent'};\n  padding: 1rem 1rem;\n  cursor: ${({active}) => active ? 'default' : 'pointer'};\n  width: 100%;\n\n  transition: background 0.25s ease-in-out;\n\n  &:hover {\n    background: ${({ theme, active }) =>\n      active ? theme.background.default : theme.background.accent};\n  }\n`;\n\nconst Text = styled.span(styles.text, styles.body1);\n\nfunction MenuItem({ children, active, onClick }) {\n  return (\n    <Root active={active} onClick={onClick}>\n      <Text>{children}</Text>\n    </Root>\n  );\n}\n\nMenuItem.propTypes = {\n  children: PropTypes.string.isRequired,\n  active: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default React.memo(MenuItem);\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation } from 'react-router';\n\nimport MenuItem from '../components/menu/item';\n\nfunction MenuItemWired({title, route}) {\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const goTo = useCallback(() => history.push(route), [route, history]);\n  return (\n    <MenuItem onClick={goTo} active={location.pathname === route}>\n      {title}\n    </MenuItem>\n  );\n}\n\nMenuItemWired.propTypes = {\n  title: PropTypes.string.isRequired,\n  route: PropTypes.string.isRequired,\n};\n\nexport default MenuItemWired;\n","import React, { useCallback, useState } from 'react';\nimport i18next from 'i18next';\nimport { MdMenu } from 'react-icons/md';\nimport styled from 'styled-components';\n\nimport IconButton from '../components/buttons/icon';\nimport Header from '../components/header';\nimport Menu from '../components/menu';\n\nimport MenuItemWired from './menu-item-wired';\n\nconst Absolute = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n`;\n\nfunction MainHeaderWired() {\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  const showMenu = useCallback(() => setMenuVisible(true), []);\n  const hideMenu = useCallback(() => setMenuVisible(false), []);\n\n  return (\n    <>\n      <Menu onHide={hideMenu} visible={menuVisible}>\n        <MenuItemWired route=\"/\" title={i18next.t('home.title')} />\n        <MenuItemWired route=\"/entry-list\" title={i18next.t('entryList.title')} />\n      </Menu>\n      <Absolute>\n        <Header\n          slotButton={\n            <IconButton onClick={showMenu}>\n              <MdMenu />\n            </IconButton>\n          }\n        >\n          {i18next.t('app.title')}\n        </Header>\n      </Absolute>\n    </>\n  );\n}\n\nexport default MainHeaderWired;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Root = styled.div`\n  background: ${({ theme }) => theme.background.default};\n`;\n\nfunction HomeScreen() {\n  return <Root />;\n}\n\nexport default HomeScreen;\n","import Selectors from './selectors';\n\nexport default {\n  selectors: Selectors\n}\n","import { createSelector } from '../util';\nimport core from '../core';\n\nconst getEntryIDs = createSelector([core.selectors.getEntryByEntryID], (entryByEntryID) =>\n  entryByEntryID.keySeq().toOrderedSet(),\n);\n\nexport default {\n  getEntryIDs,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Root = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst ItemsContainer = styled.div`\n  padding: 0.5rem;\n  overflow-y: auto;\n`;\n\nfunction EntryList({ children }) {\n  return (\n    <Root>\n      <ItemsContainer>{children}</ItemsContainer>\n    </Root>\n  );\n}\n\nEntryList.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default React.memo(EntryList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport styles from './styles';\n\nconst Root = styled.span(\n  styles.text,\n  styles.body1,\n  ({ theme, positive }) => css`\n    font-weight: ${theme.font.weight.medium};\n    color: ${positive ? theme.text.positive : theme.text.negative};\n  `,\n);\n\nfunction MoneyText({ children }) {\n  const moneyValue = Math.abs(children)\n    .toFixed(2)\n    .replace('.', ',')\n    .replace(/(\\d)(?=(\\d{3})+,)/g, '$1.');\n\n  return (\n    <Root positive={children > 0}>{`R$ ${moneyValue}`}</Root>\n  );\n}\n\nMoneyText.propTypes = {\n  children: PropTypes.number.isRequired,\n};\n\nexport default React.memo(MoneyText);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport MoneyText from '../money-text';\nimport styles from '../styles';\n\nconst Root = styled.section`\n  background: ${({ theme }) => theme.background.primary};\n  padding: 1rem;\n  border-radius: 0.25rem;\n  width: 100%;\n  margin-top: 0.5rem;\n`;\n\nconst Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nconst Text = styled.span(styles.text, styles.body2);\n\nconst Title = styled.span(\n  styles.text,\n  styles.body1,\n  ({ theme }) => css`\n    font-weight: ${theme.font.weight.medium};\n  `,\n);\n\nfunction EntryCard({ title, value, description }) {\n  return (\n    <Root>\n      <Header>\n        <Title>{title}</Title>\n        <MoneyText>{value}</MoneyText>\n      </Header>\n      <Text>{description}</Text>\n    </Root>\n  );\n}\n\nEntryCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nexport default React.memo(EntryCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport core from '../../store/core';\n\nimport EntryCard from '../../components/entry-list/entry-card';\n\nconst { getEntryByEntryID } = core.selectors;\n\nfunction EntryCardWired({ entryID }) {\n  const entry = useSelector(getEntryByEntryID).get(entryID);\n\n  return (\n    <EntryCard value={entry.value} description={entry.description} title={entry.title} />\n  );\n}\n\nEntryCardWired.propTypes = {\n  entryID: PropTypes.string.isRequired,\n};\n\nexport default EntryCardWired;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport entryList from '../../store/entry-list';\n\nimport EntryList from '../../components/entry-list';\n\nimport EntryCardWired from './entry-card-wired';\n\nconst { getEntryIDs } = entryList.selectors;\n\nfunction EntryListScreen() {\n  const entryIDs = useSelector(getEntryIDs);\n\n  return (\n    <EntryList>\n      {entryIDs.map((entryID) => (\n        <EntryCardWired entryID={entryID} />\n      ))}\n    </EntryList>\n  );\n}\n\nexport default EntryListScreen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport styles from '../styles';\n\nconst Root = styled.button(\n  styles.text,\n  styles.button,\n  ({ theme }) => css`\n    padding: 0.5rem 1rem;\n    border-radius: 0.25rem;\n    background: ${theme.button.primary.background};\n\n    font-size: 1em;\n    font-weight: ${theme.font.weight.medium};\n    color: ${theme.button.primary.text};\n\n    &:hover {\n      box-shadow: inset 0 0 1.5rem ${theme.button.primary.active};\n    }\n    &:active {\n      background: ${theme.button.primary.active};\n    }\n    &[disabled] {\n      cursor: not-allowed;\n      background: ${theme.button.disabled.background};\n      color: ${theme.button.disabled.text};\n      &:hover {\n        box-shadow: none;\n      }\n      &:active {\n        background: none;\n      }\n    }\n  `,\n);\n\nfunction PrimaryButton({ onClick, children, disabled }) {\n  return (\n    <Root disabled={disabled} onClick={onClick}>\n      {children}\n    </Root>\n  );\n}\n\nPrimaryButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  disabled: PropTypes.bool,\n};\n\nPrimaryButton.defaultProps = {\n  disabled: false,\n};\n\nexport default React.memo(PrimaryButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport styles from '../styles';\n\nconst Root = styled.button(\n  styles.text,\n  styles.button,\n  ({ theme }) => css`\n    padding: 0.5rem 1rem;\n    background: transparent;\n\n    font-size: 1em;\n    font-weight: ${theme.font.weight.medium};\n    color: ${theme.text.primary};\n\n    &:hover {\n      text-decoration: underline;\n    }\n    &[disabled] {\n      cursor: not-allowed;\n      color: ${theme.button.disabled.text};\n      &:hover {\n        text-decoration: none;\n      }\n    }\n  `,\n);\n\nfunction LinkButton({ onClick, children, disabled }) {\n  return (\n    <Root disabled={disabled} onClick={onClick}>\n      {children}\n    </Root>\n  );\n}\n\nLinkButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  disabled: PropTypes.bool,\n};\n\nLinkButton.defaultProps = {\n  disabled: false,\n};\n\nexport default React.memo(LinkButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport i18next from 'i18next';\n\nimport styles from '../styles';\nimport PrimaryButton from '../buttons/primary';\nimport LinkButton from '../buttons/link';\n\nconst Root = styled.div(\n  styles.modal,\n  ({ visible }) => css`\n    bottom: ${visible ? 0 : '-6rem'};\n    right: 0;\n    left: 0;\n    display: flex;\n    height: 6rem;\n    padding-top: 1rem;\n    align-items: center;\n    flex-direction: column;\n  `,\n);\n\nconst Footer = styled.footer`\n  display: flex;\n  padding-top: 1rem;\n`;\n\nconst Text = styled.span(styles.text, styles.body1);\n\nfunction ConfirmationModal({ message, onConfirm, onDeny, visible }) {\n  return (\n    <Root visible={visible}>\n      <Text>{message}</Text>\n      <Footer>\n        <PrimaryButton onClick={onConfirm}>{i18next.t('yes')}</PrimaryButton>\n        <LinkButton onClick={onDeny}>{i18next.t('no')}</LinkButton>\n      </Footer>\n    </Root>\n  );\n}\n\nConfirmationModal.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  message: PropTypes.string.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n  onDeny: PropTypes.func.isRequired,\n};\n\nexport default ConfirmationModal;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport modal from '../store/modal';\nimport ConfirmationModal from '../components/modal/confirmation';\n\nconst { modalOpen, modalClose } = modal.creators;\n\nfunction TestModal({ message, visible }) {\n  const dispatch = useDispatch();\n\n  const handleConfirm = useCallback(() => {\n    setTimeout(() => dispatch(modalOpen('TestModal', { message })), 3000);\n    dispatch(modalClose('TestModal'));\n  }, [dispatch, message]);\n\n  const handleDeny = useCallback(() => dispatch(modalClose('TestModal')), [dispatch]);\n\n  return (\n    <ConfirmationModal\n      onConfirm={handleConfirm}\n      onDeny={handleDeny}\n      message={message}\n      visible={visible}\n    />\n  );\n}\n\nTestModal.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  message: PropTypes.string.isRequired,\n};\n\nexport default TestModal;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Set } from 'immutable';\n\nimport modal from '../store/modal';\n\nimport TestModal from './test';\n\nconst { getOpenedModals } = modal.selectors;\n\nconst modalList = Set([TestModal]);\n\nfunction ModalsWired() {\n  const openedModals = useSelector(getOpenedModals);\n\n  return modalList.map((Modal) => {\n    const { name } = Modal;\n    const key = `modal-${name}`;\n    return <Modal key={key} visible={openedModals.has(name)} />;\n  });\n}\n\nexport default ModalsWired;\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { I18nextProvider } from 'react-i18next';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { useDispatch } from 'react-redux';\n\nimport modal from './store/modal';\n\nimport i18next from './i18n';\nimport themes from './themes';\nimport MainHeaderWired from './wired/main-header-wired';\nimport HomeScreen from './screens/home';\nimport EntryListScreen from './screens/entry-list';\nimport ModalsWired from './wired/modals-wired';\n\nconst AppRoot = styled.div`\n  position: relative;\n  background-color: ${({ backgroundColor }) => backgroundColor};\n  width: 100vw;\n  height: 100%;\n`;\n\nfunction App() {\n  const [selectedTheme] = useState('dark');\n  const theme = themes[selectedTheme];\n\n  return (\n    <ThemeProvider theme={theme}>\n      <I18nextProvider i18n={i18next}>\n        <AppRoot backgroundColor={theme.background.default}>\n          <Router>\n            <ModalsWired />\n            <MainHeaderWired />\n            <Switch>\n              <Route exact path=\"/\" component={HomeScreen} />\n              <Route exact path=\"/entry-list\" component={EntryListScreen} />\n            </Switch>\n          </Router>\n        </AppRoot>\n      </I18nextProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport '@csstools/normalize.css';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}